{"ast":null,"code":"import Axios from 'axios';\nimport VueCookies from 'vue-cookies';\nexport const loginStateInfo = {\n  /*\n    *** STATE ***\n  */\n  state: () => ({\n    id: '',\n    userId: '',\n    userName: '',\n    userEmail: '',\n    userBirth: '',\n    role: '',\n    isSignIn: false,\n    accessToken: '',\n    refreshToken: '',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }),\n\n  /*\n    *** MUTATIONS ***\n  */\n  mutations: {\n    SET_USERINFO(state, obj) {\n      state.id = obj.id;\n      state.userId = obj.userId;\n      state.userName = obj.userName;\n      state.userEmail = obj.userEmail;\n      state.userBirth = obj.userBirth;\n      state.role = obj.role; // 토큰발행값 받아야한다...\n\n      state.isSignIn = true;\n    },\n\n    INIT_USERINFO(state) {\n      state.userId = '';\n      state.userName = '';\n      state.isSignIn = false;\n    },\n\n    SIGNIN_TOK(state, payload) {\n      VueCookies.set('accessToken', payload.data.accessToken, '60s');\n      VueCookies.set('refreshToken', payload.data.refreshToken, '1h');\n      console.log('pay pay pay', payload);\n      state.accessToken = payload.data.accessToken;\n      state.refreshToken = payload.data.refreshToken;\n    },\n\n    REFRESH_TOK(state, payload) {\n      VueCookies.set('accessToken', payload.data.authorization, '60s');\n      VueCookies.set('refreshToken', payload.data.refresh, '1h');\n      state.accessToken = payload.data.authorization;\n    },\n\n    REMOVE_TOK(state) {\n      VueCookies.remove('accessToken');\n      VueCookies.remove('refreshToken');\n      state.accessToken = '';\n      state.refreshToken = '';\n    }\n\n  },\n\n  /*\n    *** GETTERS ***\n  */\n  getters: {\n    // 쿠키에 저장된 토큰 가져오기\n    GET_TOKEN() {\n      let ac = VueCookies.get('accessToken');\n      let rf = VueCookies.get('refreshToken');\n      return {\n        access: ac,\n        refresh: rf\n      };\n    }\n\n  },\n\n  /*\n    *** ACTIONS ***\n  */\n  actions: {\n    SIGNIN: ({\n      commit\n    }, params, headConfig) => {\n      return new Promise((resolve, reject) => {\n        Axios.post('http://localhost:8080/auth/signin', params, headConfig).then(res => {\n          commit('SIGNIN_TOK', res);\n          resolve(res);\n        }).catch(err => {\n          console.log('sign in err', err.message);\n          reject(err);\n        });\n      });\n    },\n    // access토큰 재요청\n    REFRESH_TOKEN: ({\n      commit\n    }, headConfig) => {\n      return new Promise((resolve, reject) => {\n        Axios.post('http://localhost:8080/auth/refreshToken', headConfig).then(res => {\n          console.log('refresh res', res);\n          commit('REFRESH_TOK', res);\n          resolve(res);\n        }).catch(err => {\n          console.log('refresh token err', err.config);\n          reject(err);\n        });\n      });\n    },\n    SIGNOUT: ({\n      commit\n    }) => {\n      commit('REMOVE_TOK');\n    }\n  }\n};","map":{"version":3,"names":["Axios","VueCookies","loginStateInfo","state","id","userId","userName","userEmail","userBirth","role","isSignIn","accessToken","refreshToken","headers","mutations","SET_USERINFO","obj","INIT_USERINFO","SIGNIN_TOK","payload","set","data","console","log","REFRESH_TOK","authorization","refresh","REMOVE_TOK","remove","getters","GET_TOKEN","ac","get","rf","access","actions","SIGNIN","commit","params","headConfig","Promise","resolve","reject","post","then","res","catch","err","message","REFRESH_TOKEN","config","SIGNOUT"],"sources":["/Users/kdw/Documents/todo/todo-front/src/store/loginStateInfo.js"],"sourcesContent":["import Axios from 'axios'\nimport VueCookies from 'vue-cookies'\n\nexport const loginStateInfo = {\n  /*\n    *** STATE ***\n  */\n  state : () => ({\n    id         : '',\n    userId     : '',\n    userName   : '',\n    userEmail  : '',\n    userBirth  : '',\n    role       : '',\n    isSignIn   : false,\n\n    accessToken : '',\n    refreshToken : '',\n\n    headers : { \"Content-Type\" : \"application/json\" }\n  }),\n  /*\n    *** MUTATIONS ***\n  */\n  mutations : {\n\n    SET_USERINFO ( state, obj ) {\n\n      state.id         = obj.id;\n      state.userId     = obj.userId;\n      state.userName   = obj.userName;\n      state.userEmail  = obj.userEmail;\n      state.userBirth  = obj.userBirth;\n      state.role       = obj.role;\n      // 토큰발행값 받아야한다...\n      state.isSignIn   = true;\n    },\n    INIT_USERINFO ( state ) {\n      state.userId     = '';\n      state.userName   = '';\n      state.isSignIn   = false;\n    },\n\n    SIGNIN_TOK ( state, payload ) {\n      VueCookies.set( 'accessToken', payload.data.accessToken, '60s' );\n      VueCookies.set( 'refreshToken', payload.data.refreshToken, '1h' );\n      console.log('pay pay pay', payload)\n      state.accessToken  = payload.data.accessToken;\n      state.refreshToken = payload.data.refreshToken;\n    },\n    REFRESH_TOK( state, payload ) {\n      VueCookies.set( 'accessToken', payload.data.authorization, '60s' );\n      VueCookies.set( 'refreshToken', payload.data.refresh, '1h' );\n      state.accessToken  = payload.data.authorization;\n    },\n    REMOVE_TOK( state ) {\n\n      VueCookies.remove( 'accessToken' );\n      VueCookies.remove( 'refreshToken' );\n\n      state.accessToken  = '';\n      state.refreshToken = '';\n\n    }\n\n  },\n  /*\n    *** GETTERS ***\n  */\n  getters : {\n    // 쿠키에 저장된 토큰 가져오기\n    GET_TOKEN () {\n      let ac = VueCookies.get( 'accessToken' );\n      let rf = VueCookies.get( 'refreshToken' );\n\n      return {\n        access : ac,\n        refresh : rf\n      };\n    }\n  },\n  /*\n    *** ACTIONS ***\n  */\n  actions : {\n\n    SIGNIN : ( { commit }, params, headConfig ) => {\n      return new Promise( ( resolve, reject ) => {\n        Axios.post( 'http://localhost:8080/auth/signin', params, headConfig).then( res => {\n          commit('SIGNIN_TOK', res);\n          resolve( res );\n        })\n        .catch( err => {\n          console.log( 'sign in err', err.message );\n          reject( err );\n        });\n\n      });\n    },\n    // access토큰 재요청\n    REFRESH_TOKEN : ( { commit }, headConfig ) => {\n      return new Promise( ( resolve, reject ) => {\n        Axios.post( 'http://localhost:8080/auth/refreshToken', headConfig ).then( res => {\n          console.log('refresh res', res);\n          commit('REFRESH_TOK', res);\n          resolve( res );\n        }).catch( err => {\n          console.log( 'refresh token err', err.config );\n          reject( err );\n        })\n      })\n    },\n\n    SIGNOUT : ( { commit } ) => {\n      commit('REMOVE_TOK');\n    }\n\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}