{"ast":null,"code":"import Modal from '../../components/common/TodoModal.vue'; // import Axios from 'axios'\n\nexport default {\n  name: 'SignIn',\n  components: {\n    'Modal': Modal\n  },\n\n  data() {\n    return {\n      userId: '',\n      userPw: ''\n    };\n  },\n\n  methods: {\n    modalEvent(key) {\n      this.$emit('modalEvent', key);\n    },\n\n    doSignUp() {\n      alert('login');\n    },\n\n    /* 검증 */\n    checkInvalidate() {\n      if (this.userId === '' || this.userPw === '') {\n        alert('빠짐없이 정보를 입력해주세요!');\n        return false;\n      } // userId 체크\n\n\n      if (this.userId.length < 5) {\n        alert('ID는 5자리 이상이어야 합니다!');\n        return false;\n      } // password 체크\n\n\n      if (this.userPw.length < 6) {\n        alert('입력한 글자가 6글자 이상이어야 합니다!');\n        return false;\n      } // 모든 검증을 통과시\n\n\n      return true;\n    },\n\n    /* 키이벤트 */\n    keyEvent(e) {\n      const regExp = /[^0-9a-z]/g;\n      const regExp2 = /[^a-z]/g;\n      const ele = e.target; // userId 첫 글자 숫자 막기\n\n      if (this.userId.trim().length === 1) {\n        if (regExp2.test(ele.value)) {\n          ele.value = ele.value.replace(regExp2, '');\n          alert('ID는 첫 시작은 영문자만 사용가능합니다. ');\n        }\n      } // userId 한글입력 막기\n\n\n      if (regExp.test(ele.value)) {\n        ele.value = ele.value.replace(regExp, '');\n        alert('ID는 영문(소문자), 숫자만 사용가능합니다. ');\n      } // 중복체크 해제\n\n\n      if (this.isUserIdCheck) this.isUserIdCheck = !this.isUserIdCheck;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAoCA,OAAOA,KAAP,MAAkB,uCAAlB,C,CACA;;AAEA,eAAe;EAEbC,IAAI,EAAE,QAFO;EAGbC,UAAU,EAAE;IACV,SAAUF;EADA,CAHC;;EAMbG,IAAI,GAAG;IACL,OAAO;MACLC,MAAK,EAAI,EADJ;MAELC,MAAK,EAAI;IAFJ,CAAP;EAID,CAXY;;EAYbC,OAAO,EAAE;IACPC,UAAU,CAAEC,GAAF,EAAQ;MAChB,KAAKC,KAAL,CAAW,YAAX,EAAyBD,GAAzB;IACD,CAHM;;IAIPE,QAAQ,GAAG;MACTC,KAAK,CAAC,OAAD,CAAL;IACD,CANM;;IAOP;IACAC,eAAe,GAAG;MAEhB,IACE,KAAKR,MAAL,KAAgB,EAAhB,IACA,KAAKC,MAAL,KAAgB,EAFlB,EAGE;QACAM,KAAK,CAAC,kBAAD,CAAL;QACA,OAAO,KAAP;MACF,CARgB,CAUhB;;;MACA,IAAK,KAAKP,MAAL,CAAYS,MAAZ,GAAqB,CAA1B,EAA8B;QAC5BF,KAAK,CAAC,oBAAD,CAAL;QACA,OAAO,KAAP;MACF,CAdgB,CAgBhB;;;MACA,IAAK,KAAKN,MAAL,CAAYQ,MAAZ,GAAqB,CAA1B,EAA8B;QAC5BF,KAAK,CAAC,wBAAD,CAAL;QACA,OAAO,KAAP;MACF,CApBgB,CAsBhB;;;MACA,OAAO,IAAP;IACD,CAhCM;;IAiCP;IACAG,QAAQ,CAAEC,CAAF,EAAM;MAEZ,MAAMC,MAAK,GAAK,YAAhB;MACA,MAAMC,OAAM,GAAI,SAAhB;MACA,MAAMC,GAAE,GAAQH,CAAC,CAACI,MAAlB,CAJY,CAMZ;;MACA,IAAK,KAAKf,MAAL,CAAYgB,IAAZ,GAAmBP,MAAnB,KAA8B,CAAnC,EAAuC;QAErC,IAAII,OAAO,CAACI,IAAR,CAAaH,GAAG,CAACI,KAAjB,CAAJ,EAA6B;UAC3BJ,GAAG,CAACI,KAAJ,GAAYJ,GAAG,CAACI,KAAJ,CAAUC,OAAV,CAAkBN,OAAlB,EAA2B,EAA3B,CAAZ;UACAN,KAAK,CAAC,0BAAD,CAAL;QACF;MACF,CAbY,CAeZ;;;MACA,IAAIK,MAAM,CAACK,IAAP,CAAYH,GAAG,CAACI,KAAhB,CAAJ,EAA4B;QAC1BJ,GAAG,CAACI,KAAJ,GAAYJ,GAAG,CAACI,KAAJ,CAAUC,OAAV,CAAkBP,MAAlB,EAA0B,EAA1B,CAAZ;QACAL,KAAK,CAAC,4BAAD,CAAL;MACF,CAnBY,CAqBZ;;;MACA,IAAK,KAAKa,aAAV,EAA0B,KAAKA,aAAL,GAAqB,CAAC,KAAKA,aAA3B;IAE3B;;EA1DM;AAZI,CAAf","names":["Modal","name","components","data","userId","userPw","methods","modalEvent","key","$emit","doSignUp","alert","checkInvalidate","length","keyEvent","e","regExp","regExp2","ele","target","trim","test","value","replace","isUserIdCheck"],"sourceRoot":"","sources":["/Users/kdw/Documents/todo/todo-front/src/components/login/SignIn.vue"],"sourcesContent":["<template>\n  <Modal>\n    <template #header>\n      <div class=\"modalClose\" >\n        <i\n        class=\"closeModalBtn fas fa-times\"\n        aria-hidden=\"true\"\n        style=\"font-size:3rem;\"\n        @click=\"modalEvent('modalClose')\"\n        ></i>\n      </div>\n      <h3>로그인</h3>\n    </template>\n    <template #body>\n\n      <div class=\"input-group\">\n        <span class=\"input-group-addon\">ID</span>\n        <input type=\"text\" @input=\"keyEvent\" class=\"form-control\" placeholder=\"ID를 입력하세요.\">\n      </div><!-- /input-group -->\n\n      <div class=\"input-group commonMarginTop\">\n        <span class=\"input-group-addon\">PW</span>\n        <input type=\"password\" class=\"form-control\" placeholder=\"비밀번호를 입력하세요.\">\n      </div><!-- /input-group -->\n\n    </template>\n    <template #footer>\n      <div class=\"\">\n        <button type=\"button\" @click=\"doSignUp\" class=\"btn btn-default\" style=\"margin:0;\">로그인</button>\n        <button type=\"button\" @click=\"modalEvent('signUp')\" class=\"btn btn-default commonMarginLeft\" style=\"margin:0; margin-left: 5px;\">회원가입</button>\n      </div>\n    </template>\n  </Modal>\n</template>\n\n<script>\nimport Modal from '../../components/common/TodoModal.vue'\n// import Axios from 'axios'\n\nexport default {\n\n  name: 'SignIn',\n  components: {\n    'Modal' : Modal\n  },\n  data() {\n    return {\n      userId : '',\n      userPw : ''\n    }\n  },\n  methods: {\n    modalEvent( key ) {\n      this.$emit('modalEvent', key);\n    },\n    doSignUp() {\n      alert('login');\n    },\n    /* 검증 */\n    checkInvalidate() {\n\n      if (\n        this.userId === '' ||\n        this.userPw === ''\n      ) {\n        alert('빠짐없이 정보를 입력해주세요!');\n        return false;\n      }\n\n      // userId 체크\n      if ( this.userId.length < 5 ) {\n        alert('ID는 5자리 이상이어야 합니다!');\n        return false;\n      }\n\n      // password 체크\n      if ( this.userPw.length < 6 ) {\n        alert('입력한 글자가 6글자 이상이어야 합니다!');\n        return false;\n      }\n\n      // 모든 검증을 통과시\n      return true;\n    },\n    /* 키이벤트 */\n    keyEvent( e ) {\n\n      const regExp  = /[^0-9a-z]/g;\n      const regExp2 = /[^a-z]/g;\n      const ele     = e.target;\n\n      // userId 첫 글자 숫자 막기\n      if ( this.userId.trim().length === 1 ) {\n\n        if (regExp2.test(ele.value)) {\n          ele.value = ele.value.replace(regExp2, '');\n          alert('ID는 첫 시작은 영문자만 사용가능합니다. ')\n        }\n      }\n\n      // userId 한글입력 막기\n      if (regExp.test(ele.value)) {\n        ele.value = ele.value.replace(regExp, '');\n        alert('ID는 영문(소문자), 숫자만 사용가능합니다. ')\n      }\n\n      // 중복체크 해제\n      if ( this.isUserIdCheck ) this.isUserIdCheck = !this.isUserIdCheck;\n\n    },\n\n\n  }\n\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '~styles/Nomalize.scss';\n@import '~styles/CommonStyle.scss';\n\n</style>\n"]},"metadata":{},"sourceType":"module"}