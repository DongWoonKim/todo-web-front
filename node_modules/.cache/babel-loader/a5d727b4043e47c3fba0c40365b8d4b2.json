{"ast":null,"code":"// import HelloWorld from './components/HelloWorld.vue'\nimport TodoHeader from './components/common/TodoHeader.vue';\nimport TodoFooter from './components/common/TodoFooter.vue';\nimport TodoInput from './components/todo-core/TodoInput.vue';\nimport TodoList from './components/todo-core/TodoList.vue'; // import Axios from 'axios'\n\nexport default {\n  name: 'App',\n  components: {\n    'TodoHeader': TodoHeader,\n    'TodoFooter': TodoFooter,\n    'TodoInput': TodoInput,\n    'TodoList': TodoList\n  },\n\n  data() {\n    return {\n      todoItems: []\n    };\n  },\n\n  methods: {\n    addTodo(todoItem) {\n      // 로컬 스토리지에 데이터를 추가하는 로직\n      localStorage.setItem(todoItem, todoItem);\n      this.todoItems.push(todoItem);\n      let obj = {};\n      obj.item = todoItem;\n      console.log('axios config', this.axiosConfig);\n      Axios.post('http://localhost:8080/todo', JSON.stringify(obj), this.axiosConfig).then(function (response) {\n        console.log('res', response);\n      }).catch(function (error) {\n        console.log('res', error);\n      });\n    },\n\n    clearAll() {\n      localStorage.clear();\n      this.todoItems = [];\n    },\n\n    removeTodo(todoItem, index) {\n      localStorage.removeItem(todoItem);\n      this.todoItems.splice(index, 1);\n    }\n\n  },\n\n  created() {\n    if (localStorage.length > 0) {\n      for (let i = 0; i < localStorage.length; ++i) {\n        this.todoItems.push(localStorage.key(i));\n      }\n    }\n  }\n\n};","map":{"version":3,"mappings":"AAUA;AACA,OAAOA,UAAP,MAAuB,oCAAvB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,QAAP,MAAqB,qCAArB,C,CACA;;AAEA,eAAe;EACbC,IAAI,EAAE,KADO;EAEbC,UAAU,EAAE;IACV,cAAeL,UADL;IAEV,cAAeC,UAFL;IAGV,aAAcC,SAHJ;IAIV,YAAaC;EAJH,CAFC;;EAQbG,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE;IADN,CAAP;EAGD,CAZY;;EAabC,OAAO,EAAE;IACPC,OAAO,CAACC,QAAD,EAAW;MAChB;MACAC,YAAY,CAACC,OAAb,CAAqBF,QAArB,EAA+BA,QAA/B;MACA,KAAKH,SAAL,CAAeM,IAAf,CAAoBH,QAApB;MAEA,IAAII,GAAE,GAAI,EAAV;MACAA,GAAG,CAACC,IAAJ,GAAWL,QAAX;MAEAM,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKC,WAAjC;MAEAC,KAAK,CAACC,IAAN,CAAW,4BAAX,EAAyCC,IAAI,CAACC,SAAL,CAAgBR,GAAhB,CAAzC,EAAgE,KAAKI,WAArE,EACGK,IADH,CACQ,UAASC,QAAT,EAAmB;QACvBR,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBO,QAAnB;MACD,CAHH,EAIGC,KAJH,CAIS,UAASC,KAAT,EAAgB;QACrBV,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBS,KAAnB;MACD,CANH;IAQD,CAnBM;;IAoBPC,QAAQ,GAAG;MACThB,YAAY,CAACiB,KAAb;MACA,KAAKrB,SAAL,GAAiB,EAAjB;IACD,CAvBM;;IAwBPsB,UAAU,CAACnB,QAAD,EAAWoB,KAAX,EAAkB;MAC1BnB,YAAY,CAACoB,UAAb,CAAyBrB,QAAzB;MACA,KAAKH,SAAL,CAAeyB,MAAf,CAAuBF,KAAvB,EAA8B,CAA9B;IACF;;EA3BO,CAbI;;EA0CbG,OAAO,GAAG;IAER,IAAKtB,YAAY,CAACuB,MAAb,GAAsB,CAA3B,EAA+B;MAC7B,KAAM,IAAIC,IAAI,CAAd,EAAiBA,IAAIxB,YAAY,CAACuB,MAAlC,EAA0C,EAAEC,CAA5C,EAAgD;QAC9C,KAAK5B,SAAL,CAAeM,IAAf,CAAqBF,YAAY,CAACyB,GAAb,CAAiBD,CAAjB,CAArB;MACF;IACF;EAEF;;AAlDa,CAAf","names":["TodoHeader","TodoFooter","TodoInput","TodoList","name","components","data","todoItems","methods","addTodo","todoItem","localStorage","setItem","push","obj","item","console","log","axiosConfig","Axios","post","JSON","stringify","then","response","catch","error","clearAll","clear","removeTodo","index","removeItem","splice","created","length","i","key"],"sourceRoot":"","sources":["/Users/kdw/Documents/todo/todo-front/src/App.vue"],"sourcesContent":["<!-- https://velog.io/@ddpound/Vue-SpringBoot-HTTP-%ED%86%B5%EC%8B%A0-%ED%85%8C%EC%8A%A4%ED%8A%B8cors%EA%B0%92-%ED%97%88%EC%9A%A9 -->\n<template>\n  <TodoHeader/>\n  <TodoInput v-on:addTodo=\"addTodo\"/>\n  <TodoList v-bind:propsdata=\"todoItems\"\n    @removeTodo=\"removeTodo\"/>\n  <TodoFooter v-on:removeAll=\"clearAll\"/>\n</template>\n\n<script>\n// import HelloWorld from './components/HelloWorld.vue'\nimport TodoHeader from './components/common/TodoHeader.vue'\nimport TodoFooter from './components/common/TodoFooter.vue'\nimport TodoInput from './components/todo-core/TodoInput.vue'\nimport TodoList from './components/todo-core/TodoList.vue'\n// import Axios from 'axios'\n\nexport default {\n  name: 'App',\n  components: {\n    'TodoHeader' : TodoHeader,\n    'TodoFooter' : TodoFooter,\n    'TodoInput' : TodoInput,\n    'TodoList' : TodoList\n  },\n  data() {\n    return {\n      todoItems: []\n    }\n  },\n  methods: {\n    addTodo(todoItem) {\n      // 로컬 스토리지에 데이터를 추가하는 로직\n      localStorage.setItem(todoItem, todoItem);\n      this.todoItems.push(todoItem);\n\n      let obj = {};\n      obj.item = todoItem;\n\n      console.log('axios config', this.axiosConfig);\n\n      Axios.post('http://localhost:8080/todo', JSON.stringify( obj ), this.axiosConfig)\n        .then(function(response) {\n          console.log('res', response);\n        })\n        .catch(function(error) {\n          console.log('res', error);\n        });\n\n    },\n    clearAll() {\n      localStorage.clear();\n      this.todoItems = [];\n    },\n    removeTodo(todoItem, index) {\n      localStorage.removeItem( todoItem );\n      this.todoItems.splice( index, 1 );\n    }\n  },\n  created() {\n\n    if ( localStorage.length > 0 ) {\n      for ( let i = 0; i < localStorage.length; ++i ) {\n        this.todoItems.push( localStorage.key(i) );\n      }\n    }\n\n  }\n}\n</script>\n\n<style lang=\"scss\">\nbody {\n  text-align: center;\n  background-color: #F6F6F8;\n}\ninput {\n  border-style: groove;\n  width: 200px;\n}\nbutton {\n  border-style: groove;\n}\n.shadow {\n  box-shadow: 5px 10px 10px rgba(0, 0, 0, 0.03);\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}