{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TodoHeader = _resolveComponent(\"TodoHeader\");\n\n  const _component_TodoInput = _resolveComponent(\"TodoInput\");\n\n  const _component_TodoList = _resolveComponent(\"TodoList\");\n\n  const _component_TodoFooter = _resolveComponent(\"TodoFooter\");\n\n  const _component_SignUp = _resolveComponent(\"SignUp\");\n\n  const _component_SignIn = _resolveComponent(\"SignIn\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_TodoHeader, {\n    onHeadEvent: $options.headEvent\n  }, null, 8\n  /* PROPS */\n  , [\"onHeadEvent\"]), _createVNode(_component_TodoInput, {\n    onAddTodo: $options.addTodo\n  }, null, 8\n  /* PROPS */\n  , [\"onAddTodo\"]), _createVNode(_component_TodoList, {\n    propsdata: $data.todoItems,\n    onRemoveTodo: $options.removeTodo\n  }, null, 8\n  /* PROPS */\n  , [\"propsdata\", \"onRemoveTodo\"]), _createVNode(_component_TodoFooter, {\n    onRemoveAll: $options.clearAll\n  }, null, 8\n  /* PROPS */\n  , [\"onRemoveAll\"]), _createCommentVNode(\" 회원가입 모달 \"), $data.signUpModal ? (_openBlock(), _createBlock(_component_SignUp, {\n    key: 0,\n    onModalEvent: $options.modalEvent\n  }, null, 8\n  /* PROPS */\n  , [\"onModalEvent\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 로그인 모달 \"), $data.signInModal ? (_openBlock(), _createBlock(_component_SignIn, {\n    key: 1,\n    onModalEvent: $options.modalEvent\n  }, null, 8\n  /* PROPS */\n  , [\"onModalEvent\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 로그인 모달 : ouath version \"), _createCommentVNode(\"\\n  <Modal v-if=\\\"signInModal\\\">\\n    <template #header>\\n      <div class=\\\"modalClose\\\" >\\n        <i\\n        class=\\\"closeModalBtn fas fa-times\\\"\\n        aria-hidden=\\\"true\\\"\\n        @click=\\\"signInModal = false\\\"\\n        style=\\\"font-size:3rem;\\\"\\n        ></i>\\n      </div>\\n      <h1>연동</h1>\\n    </template>\\n    <template #body>\\n      <button\\n        @click=\\\"handleClickSignIn\\\"\\n        type=\\\"button\\\"\\n        class=\\\"btn btn-Google btn-lg\\\">\\n        <i class=\\\"fa fa-google-plus animated infinite tada\\\"></i> Google+\\n      </button>\\n    </template>\\n  </Modal>\\n\")], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;6DAEEA,aAAwCC,qBAAxC,EAAwC;IAAvBC,WAAS,EAAEC;EAAY,CAAxC,EAAqC,IAArC,EAAqC;EAAA;EAArC,EAAqC,eAArC,GACAH,aAAmCI,oBAAnC,EAAmC;IAAnBC,SAAO,EAAEF;EAAU,CAAnC,EAAgC,IAAhC,EAAgC;EAAA;EAAhC,EAAgC,aAAhC,GACAH,aAC4BM,mBAD5B,EAC4B;IADXC,SAAS,EAAEC,eACA;IAAzBC,YAAU,EAAEN;EAAa,CAD5B;;EAAA,kCAEAH,aAAuCU,qBAAvC,EAAuC;IAAtBC,WAAS,EAAER;EAAW,CAAvC,EAAoC,IAApC,EAAoC;EAAA;EAApC,EAAoC,eAApC,GACAS,kCACcJ,mCAAdK,aAAiEC,iBAAjE,EAAiE;UAAA;IAAjCC,YAAU,EAAEZ;EAAqB,CAAjE;;EAAA,0DACAS,iCACcJ,mCAAdK,aAAiEG,iBAAjE,EAAiE;UAAA;IAAjCD,YAAU,EAAEZ;EAAqB,CAAjE;;EAAA,0DAGAS,iDACAA","names":["_createVNode","_component_TodoHeader","onHeadEvent","$options","_component_TodoInput","onAddTodo","_component_TodoList","propsdata","$data","onRemoveTodo","_component_TodoFooter","onRemoveAll","_createCommentVNode","_createBlock","_component_SignUp","onModalEvent","_component_SignIn"],"sourceRoot":"","sources":["/Users/kdw/Documents/todo/todo-front/src/App.vue"],"sourcesContent":["<!-- https://velog.io/@ddpound/Vue-SpringBoot-HTTP-%ED%86%B5%EC%8B%A0-%ED%85%8C%EC%8A%A4%ED%8A%B8cors%EA%B0%92-%ED%97%88%EC%9A%A9 -->\n<template>\n  <TodoHeader v-on:headEvent=\"headEvent\"/>\n  <TodoInput v-on:addTodo=\"addTodo\"/>\n  <TodoList v-bind:propsdata=\"todoItems\"\n    @removeTodo=\"removeTodo\"/>\n  <TodoFooter v-on:removeAll=\"clearAll\"/>\n  <!-- 회원가입 모달 -->\n  <SignUp v-if=\"signUpModal\" v-on:modalEvent=\"modalEvent\"></SignUp>\n  <!-- 로그인 모달 -->\n  <SignIn v-if=\"signInModal\" v-on:modalEvent=\"modalEvent\"></SignIn>\n\n\n  <!-- 로그인 모달 : ouath version -->\n  <!--\n  <Modal v-if=\"signInModal\">\n    <template #header>\n      <div class=\"modalClose\" >\n        <i\n        class=\"closeModalBtn fas fa-times\"\n        aria-hidden=\"true\"\n        @click=\"signInModal = false\"\n        style=\"font-size:3rem;\"\n        ></i>\n      </div>\n      <h1>연동</h1>\n    </template>\n    <template #body>\n      <button\n        @click=\"handleClickSignIn\"\n        type=\"button\"\n        class=\"btn btn-Google btn-lg\">\n        <i class=\"fa fa-google-plus animated infinite tada\"></i> Google+\n      </button>\n    </template>\n  </Modal>\n-->\n\n</template>\n\n<script>\n// import HelloWorld from './components/HelloWorld.vue'\nimport TodoHeader from './components/common/TodoHeader.vue'\nimport TodoFooter from './components/common/TodoFooter.vue'\nimport TodoInput from './components/todo-core/TodoInput.vue'\nimport TodoList from './components/todo-core/TodoList.vue'\nimport SignUp from './components/login/SignUp.vue'\nimport SignIn from './components/login/SignIn.vue'\nimport Axios from 'axios'\n// import { inject, toRefs } from \"vue\";\nexport default {\n  name: 'App',\n  components: {\n    'TodoHeader' : TodoHeader,\n    'TodoFooter' : TodoFooter,\n    'TodoInput' : TodoInput,\n    'TodoList' : TodoList,\n    'SignUp' : SignUp,\n    'SignIn' : SignIn\n  },\n  data() {\n    return {\n      user: '',\n      todoItems: [],\n      signUpModal : false,\n      signInModal : false\n    }\n  },\n  methods: {\n    addTodo(todoItem) {\n      // 로컬 스토리지에 데이터를 추가하는 로직\n      localStorage.setItem(todoItem, todoItem);\n      this.todoItems.push(todoItem);\n      let obj = {};\n      obj.item = todoItem;\n      Axios.post('http://localhost:8080/todo', JSON.stringify( obj ), this.axiosConfig)\n        .then(function(response) {\n          console.log('res', response);\n        })\n        .catch(function(error) {\n          console.log('res', error);\n        });\n    },\n    headEvent(key) {\n      if (key === 'login') {\n        this.signInModal = true;\n      } else if ( key === 'logout' ) {\n\n        let self = this;\n\n        // 서버로 요청을 날리면 서버에선 refreshToken 테이블에서 아예 지워버린다.\n        let obj = {};\n        obj.userId = this.$store.state.loginStateInfo.userId;\n\n        this.$store.dispatch( 'SIGNOUT', obj, this.axiosConfig ).then( () => {\n          // header 상태 유지를 위해 TodoHeader 페이지에 이벤트를 발생시킨다.\n          self.emitter.emit( 'resSignin' );\n        });\n\n      } else if ( key === 'signUp' ) {\n        this.signUpModal = true;\n      }\n    },\n    modalEvent(key) {\n      if ( key === 'modalClose' ) {\n        this.signUpModal = false;\n        this.signInModal = false;\n      } else if ( key === 'signUp' ) {\n        this.signInModal = false;\n        this.signUpModal = true;\n      }\n    },\n    clearAll() {\n      localStorage.clear();\n      this.todoItems = [];\n    },\n    removeTodo(todoItem, index) {\n      localStorage.removeItem( todoItem );\n      this.todoItems.splice( index, 1 );\n    },\n    async handleClickSignIn(){\n      try {\n        const googleUser = await this.$gAuth.signIn();\n        if (!googleUser) {\n          return null;\n        }\n        console.log(\"googleUser\", googleUser);\n        this.user = googleUser.getBasicProfile().getEmail();\n        console.log(\"getId\", this.user);\n        console.log(\"getBasicProfile\", googleUser.getBasicProfile());\n        console.log(\"getAuthResponse\", googleUser.getAuthResponse());\n        console.log(\n          \"getAuthResponse\",\n          this.$gAuth.instance.currentUser.get().getAuthResponse()\n        );\n        console.log('Vue3GoogleOauth.isAuthorized', this.Vue3GoogleOauth.isAuthorized);\n      } catch (error) {\n        //on fail do something\n        console.error(error);\n        return null;\n      } finally {\n        this.signInModal = false;\n      }\n    },\n    async handleClickSignOut() {\n      try {\n        await this.$gAuth.signOut();\n        console.log(\"isAuthorized\", this.Vue3GoogleOauth.isAuthorized);\n        this.user = \"\";\n      } catch (error) {\n        console.error(error);\n      }\n    },\n  },\n  /*\n  setup(props) {\n    const { isSignIn } = toRefs(props);\n    const Vue3GoogleOauth = inject(\"Vue3GoogleOauth\");\n    const handleClickLogin = () => {};\n    return {\n      Vue3GoogleOauth,\n      handleClickLogin,\n      isSignIn,\n    };\n  },\n  */\n  created() {\n    /*\n    let Vue3GoogleOauth = inject(\"Vue3GoogleOauth\");\n    console.log(\n      \"getAuthResponse vue vue \",\n      this.$gAuth\n    );\n    */\n    // console.log('Vue3GoogleOauth.isAuthorized1', this.Vue3GoogleOauth.isAuthorized);\n    if ( localStorage.length > 0 ) {\n      for ( let i = 0; i < localStorage.length; ++i ) {\n        this.todoItems.push( localStorage.key(i) );\n      }\n    }\n    let check = this.$store.getters.GET_TOKEN;\n\n    if ( check.refresh === 'undefined' ) {\n        this.$store.dispatch( 'SIGNOUT', this.axiosConfig );\n    } else if ( // access token 재발급\n      ( check.access === '' ||\n        check.access === null ||\n        check.access === 'null' ||\n        check.access === 'undefined' )\n        &&\n      ( check.refresh !== '' &&\n        check.refresh !== null &&\n        check.refresh !== 'null' &&\n        check.refresh !== 'undefined' )\n    ) {\n      this.$store.dispatch( 'REFRESH_TOKEN', this.axiosConfig ).then( () => {\n        console.log('refresh token::')\n      }).catch(( err ) => (\n        console.log( 'sigin err', err.message )\n      ));\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import '~styles/Nomalize.scss';\n@import '~styles/CommonStyle.scss';\nbody {\n  text-align: center;\n  background-color: #F6F6F8;\n}\ninput {\n  border-style: groove;\n  width: 200px;\n}\nbutton {\n  border-style: groove;\n}\n.shadow {\n  box-shadow: 5px 10px 10px rgba(0, 0, 0, 0.03);\n}\n.test{ display:flex; justify-content: center; align-items: center; height:100vh; }\n.btn {\n  margin: 40px;\n}\n.btn.btn-Google {\n  background-color: transparent;\n  color: #666A73;\n  border-color: #ee1010;\n  border-size: 2px;\n  border-radius: 0;\n  outline: 0;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}