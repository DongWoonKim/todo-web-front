{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0f133d58\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"modalClose\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"로그인\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = {\n  class: \"input-group\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"input-group-addon\"\n}, \"ID\", -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = {\n  class: \"input-group commonMarginTop\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"input-group-addon\"\n}, \"PW\", -1\n/* HOISTED */\n));\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"input-group commonMarginTop\"\n}, [/*#__PURE__*/_createTextVNode(\" [ \"), /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"#\"\n}, \"ID가 기억나지 않으세요?\"), /*#__PURE__*/_createTextVNode(\" ] \")], -1\n/* HOISTED */\n));\n\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"input-group commonMarginTop\"\n}, [/*#__PURE__*/_createTextVNode(\" [ \"), /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"#\"\n}, \"비밀번호가 기억나지 않으세요?\"), /*#__PURE__*/_createTextVNode(\" ] \")], -1\n/* HOISTED */\n));\n\nconst _hoisted_9 = {\n  class: \"input-group commonMarginTop\"\n};\nconst _hoisted_10 = {\n  class: \"\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Modal = _resolveComponent(\"Modal\");\n\n  return _openBlock(), _createBlock(_component_Modal, null, {\n    header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"i\", {\n      class: \"closeModalBtn fas fa-times\",\n      \"aria-hidden\": \"true\",\n      style: {\n        \"font-size\": \"3rem\"\n      },\n      onClick: _cache[0] || (_cache[0] = $event => $options.modalEvent('modalClose'))\n    })]), _hoisted_2]),\n    body: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.userId = $event),\n      onInput: _cache[2] || (_cache[2] = (...args) => $options.keyEvent && $options.keyEvent(...args)),\n      class: \"form-control\",\n      placeholder: \"ID를 입력하세요.\"\n    }, null, 544\n    /* HYDRATE_EVENTS, NEED_PATCH */\n    ), [[_vModelText, $data.userId]])]), _createCommentVNode(\" /input-group \"), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n      type: \"password\",\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.userPw = $event),\n      class: \"form-control\",\n      placeholder: \"비밀번호를 입력하세요.\"\n    }, null, 512\n    /* NEED_PATCH */\n    ), [[_vModelText, $data.userPw]])]), _createCommentVNode(\" /input-group \"), _createCommentVNode(\" 해당 정보 입력관련 처리는 App.vue에서 처리하게 한다. \"), _hoisted_7, _createCommentVNode(\" /input-group \"), _hoisted_8, _createCommentVNode(\" /input-group \"), _createElementVNode(\"div\", _hoisted_9, _toDisplayString(this.$store.loginStateInfo.vuexTest), 1\n    /* TEXT */\n    )]),\n    footer: _withCtx(() => [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"button\", {\n      type: \"button\",\n      onClick: _cache[4] || (_cache[4] = (...args) => $options.doSignUp && $options.doSignUp(...args)),\n      class: \"btn btn-default\",\n      style: {\n        \"margin\": \"0\"\n      }\n    }, \"로그인\"), _createElementVNode(\"button\", {\n      type: \"button\",\n      onClick: _cache[5] || (_cache[5] = $event => $options.modalEvent('signUp')),\n      class: \"btn btn-default commonMarginLeft\",\n      style: {\n        \"margin\": \"0\",\n        \"margin-left\": \"5px\"\n      }\n    }, \"회원가입\")])]),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":";;;;;EAGWA,KAAK,EAAC;;;gEAQXC,oBAAY,IAAZ,EAAY,IAAZ,EAAI,KAAJ,EAAO;AAAA;AAAP;;;EAIKD,KAAK,EAAC;;;gEACTC,oBAAyC,MAAzC,EAAyC;EAAnCD,KAAK,EAAC;AAA6B,CAAzC,EAAgC,IAAhC,EAAkC;AAAA;AAAlC;;;EAIGA,KAAK,EAAC;;;gEACTC,oBAAyC,MAAzC,EAAyC;EAAnCD,KAAK,EAAC;AAA6B,CAAzC,EAAgC,IAAhC,EAAkC;AAAA;AAAlC;;gEAKFC,oBAEM,KAFN,EAEM;EAFDD,KAAK,EAAC;AAEL,CAFN,EAAwC,+BAAC,MAAD,eAC/BC,oBAA8B,GAA9B,EAA8B;EAA3BC,IAAI,EAAC;AAAsB,CAA9B,EAAY,gBAAZ,CAD+B,gCACD,MADC,CAAxC;;AAAA;;gEAGAD,oBAEM,KAFN,EAEM;EAFDD,KAAK,EAAC;AAEL,CAFN,EAAwC,+BAAC,MAAD,eAC/BC,oBAAgC,GAAhC,EAAgC;EAA7BC,IAAI,EAAC;AAAwB,CAAhC,EAAY,kBAAZ,CAD+B,gCACC,MADD,CAAxC;;AAAA;;;EAGKF,KAAK,EAAC;;;EAMNA,KAAK,EAAC;;;;;uBArCfG,aA0CQC,gBA1CR,EA0CQ,IA1CR,EA0CQ;IAzCKC,MAAM,WACf,MAOM,CAPNJ,oBAOM,KAPN,cAOM,CANJA,oBAKK,GALL,EAKK;MAJLD,KAAK,EAAC,4BAID;MAHL,eAAY,MAGP;MAFLM,KAAuB,EAAvB;QAAA;MAAA,CAEK;MADJC,OAAK,sCAAEC,oBAAU,YAAV,CAAF;IACD,CALL,CAMI,CAPN,CAOM,EACNC,UADM,CARS,CAyCX;IA9BKC,IAAI,WAEb,MAGM,CAHNT,oBAGM,KAHN,cAGM,CAFJU,UAEI,kBADJV,oBAAoG,OAApG,EAAoG;MAA7FW,IAAI,EAAC,MAAwF;iEAAxEC,eAAMC,OAAkE;MAA/DC,OAAK,yCAAEP,+CAAF,CAA0D;MAA9CR,KAAK,EAAC,cAAwC;MAAzBgB,WAAW,EAAC;IAAa,CAApG;;IAAA,kBAA4BH,eACxB,CAHN,CAGM,yCAENZ,oBAGM,KAHN,cAGM,CAFJgB,UAEI,kBADJhB,oBAAwF,OAAxF,EAAwF;MAAjFW,IAAI,EAAC,UAA4E;iEAAxDC,eAAMC,OAAkD;MAAhDd,KAAK,EAAC,cAA0C;MAA3BgB,WAAW,EAAC;IAAe,CAAxF;;IAAA,kBAAgCH,eAC5B,CAHN,CAFM,EAKAK,qCALA,EAONA,0DAPM,EAQNC,UARM,EAUAD,qCAVA,EAWNE,UAXM,EAaAF,qCAbA,EAcNjB,oBAEM,KAFN,cAEMoB,sBADIC,MACJ,CADWC,cACX,CAD0BC,QAC1B,CAFN,EACwC;IAAA;IADxC,CAdM,CALO,CA8BT;IANKC,MAAM,WACf,MAGM,CAHNxB,oBAGM,KAHN,eAGM,CAFJA,oBAA8F,QAA9F,EAA8F;MAAtFW,IAAI,EAAC,QAAiF;MAAvEL,OAAK,yCAAEC,+CAAF,CAAkE;MAAtDR,KAAK,EAAC,iBAAgD;MAA9BM,KAAiB,EAAjB;QAAA;MAAA;IAA8B,CAA9F,EAAkF,KAAlF,CAEI,EADJL,oBAA8I,QAA9I,EAA8I;MAAtIW,IAAI,EAAC,QAAiI;MAAvHL,OAAK,sCAAEC,oBAAU,QAAV,CAAF,CAAkH;MAA1FR,KAAK,EAAC,kCAAoF;MAAjDM,KAAmC,EAAnC;QAAA;QAAA;MAAA;IAAiD,CAA9I,EAAiI,MAAjI,CACI,CAHN,CAGM,CAJS,CAMX;;;;EAAA,CA1CR","names":["class","_createElementVNode","href","_createBlock","_component_Modal","header","style","onClick","$options","_hoisted_2","body","_hoisted_4","type","$data","$event","onInput","placeholder","_hoisted_6","_createCommentVNode","_hoisted_7","_hoisted_8","_toDisplayString","$store","loginStateInfo","vuexTest","footer"],"sourceRoot":"","sources":["/Users/kdw/Documents/todo/todo-front/src/components/login/SignIn.vue"],"sourcesContent":["<template>\n  <Modal>\n    <template #header>\n      <div class=\"modalClose\" >\n        <i\n        class=\"closeModalBtn fas fa-times\"\n        aria-hidden=\"true\"\n        style=\"font-size:3rem;\"\n        @click=\"modalEvent('modalClose')\"\n        ></i>\n      </div>\n      <h3>로그인</h3>\n    </template>\n    <template #body>\n\n      <div class=\"input-group\">\n        <span class=\"input-group-addon\">ID</span>\n        <input type=\"text\" v-model=\"userId\" @input=\"keyEvent\" class=\"form-control\" placeholder=\"ID를 입력하세요.\">\n      </div><!-- /input-group -->\n\n      <div class=\"input-group commonMarginTop\">\n        <span class=\"input-group-addon\">PW</span>\n        <input type=\"password\" v-model=\"userPw\" class=\"form-control\" placeholder=\"비밀번호를 입력하세요.\">\n      </div><!-- /input-group -->\n\n      <!-- 해당 정보 입력관련 처리는 App.vue에서 처리하게 한다. -->\n      <div class=\"input-group commonMarginTop\">\n        [&nbsp;<a href=\"#\">ID가 기억나지 않으세요?</a>&nbsp;]\n      </div><!-- /input-group -->\n      <div class=\"input-group commonMarginTop\">\n        [&nbsp;<a href=\"#\">비밀번호가 기억나지 않으세요?</a>&nbsp;]\n      </div><!-- /input-group -->\n      <div class=\"input-group commonMarginTop\">\n        {{ this.$store.loginStateInfo.vuexTest }}\n      </div>\n\n    </template>\n    <template #footer>\n      <div class=\"\">\n        <button type=\"button\" @click=\"doSignUp\" class=\"btn btn-default\" style=\"margin:0;\">로그인</button>\n        <button type=\"button\" @click=\"modalEvent('signUp')\" class=\"btn btn-default commonMarginLeft\" style=\"margin:0; margin-left: 5px;\">회원가입</button>\n      </div>\n    </template>\n  </Modal>\n</template>\n\n<script>\nimport Modal from '../../components/common/TodoModal.vue'\nimport Axios from 'axios'\n\nexport default {\n\n  name: 'SignIn',\n  components: {\n    'Modal' : Modal\n  },\n  data() {\n    return {\n      userId : '',\n      userPw : ''\n    }\n  },\n  methods: {\n    modalEvent( key ) {\n      this.$emit('modalEvent', key);\n    },\n    doSignUp() {\n\n      let self = this;\n      /*\n        ******* 방어코드 시작 *******\n       */\n      if ( !this.checkInvalidate() ) return;\n\n      // let self = this;\n      // axios post 요청\n      let obj = {};\n      obj.userId = this.userId;\n      obj.userPw = this.userPw;\n\n      Axios.post('http://localhost:8080/member/signin', JSON.stringify( obj ), this.axiosConfig)\n        .then( function( res ) {\n\n          console.log('res', res);\n          if ( res.data === '' ) {\n            alert('존재하지 않거나 입력하신 ID or 비밀번호가 일치하지 않습니다!');\n            return;\n          }\n\n          // 사용자 정보를 vuex에 저장시킨다.\n\n          // 로그인 창을 닫는다.\n          self.modalEvent( 'modalClose' );\n\n        })\n        .catch(function(error) {\n          console.log('res', error);\n        });\n\n    },\n    /* 검증 */\n    checkInvalidate() {\n\n      if (\n        this.userId === '' ||\n        this.userPw === ''\n      ) {\n        alert('빠짐없이 정보를 입력해주세요!');\n        return false;\n      }\n\n      // userId 체크\n      if ( this.userId.length < 5 ) {\n        alert('ID는 5자리 이상이어야 합니다!');\n        return false;\n      }\n\n      // password 체크\n      if ( this.userPw.length < 6 ) {\n        alert('입력한 글자가 6글자 이상이어야 합니다!');\n        return false;\n      }\n\n      // 모든 검증을 통과시\n      return true;\n    },\n    /* 키이벤트 */\n    keyEvent( e ) {\n\n      const regExp  = /[^0-9a-z]/g;\n      const regExp2 = /[^a-z]/g;\n      const ele     = e.target;\n\n      // userId 첫 글자 숫자 막기\n      if ( this.userId.trim().length === 1 ) {\n\n        if (regExp2.test(ele.value)) {\n          ele.value = ele.value.replace(regExp2, '');\n          alert('ID는 첫 시작은 영문자만 사용가능합니다. ')\n        }\n      }\n\n      // userId 한글입력 막기\n      if (regExp.test(ele.value)) {\n        ele.value = ele.value.replace(regExp, '');\n        alert('ID는 영문(소문자), 숫자만 사용가능합니다. ')\n      }\n\n      // 중복체크 해제\n      if ( this.isUserIdCheck ) this.isUserIdCheck = !this.isUserIdCheck;\n\n    },\n\n\n  }\n\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '~styles/Nomalize.scss';\n@import '~styles/CommonStyle.scss';\n\n</style>\n"]},"metadata":{},"sourceType":"module"}