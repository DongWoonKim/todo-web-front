{"ast":null,"code":"// import { inject, toRefs } from \"vue\";\nexport default {\n  name: 'TodoHeader',\n  components: {},\n\n  data() {\n    return {\n      isSignIn: false\n    };\n  },\n\n  methods: {\n    headEvent(key) {\n      this.$emit('headEvent', key);\n      this.checkIsSign();\n    },\n\n    checkIsSign() {\n      let check = this.$store.getters.GET_TOKEN;\n\n      if (check.refresh !== null) {\n        this.isSignIn = true;\n      } else {\n        this.isSignIn = false;\n      }\n    }\n\n  },\n\n  created() {\n    console.log('header this', this.$store.state.loginStateInfo.isSignIn);\n    this.checkIsSign();\n  },\n\n  computed: {\n    check_token() {\n      return this.$store.getters.GET_TOKEN;\n    }\n\n  },\n  watch: {\n    check_token(val) {\n      console.log('watch token val ', val);\n    }\n\n  }\n  /*\n  setup(props) {\n    const { isSignIn } = toRefs(props);\n    const Vue3GoogleOauth = inject(\"Vue3GoogleOauth\");\n    const handleClickLogin = () => {};\n     return {\n      Vue3GoogleOauth,\n      handleClickLogin,\n      isSignIn,\n    };\n   },\n  */\n\n};","map":{"version":3,"mappings":"AAeA;AAEA,eAAe;EACbA,IAAI,EAAE,YADO;EAEbC,UAAU,EAAE,EAFC;;EAIbC,IAAI,GAAG;IACL,OAAO;MACLC,QAAO,EAAI;IADN,CAAP;EAGD,CARY;;EASbC,OAAM,EAAI;IACRC,SAAS,CAACC,GAAD,EAAM;MACb,KAAKC,KAAL,CAAW,WAAX,EAAwBD,GAAxB;MACA,KAAKE,WAAL;IAED,CALO;;IAMRA,WAAW,GAAG;MACZ,IAAIC,KAAI,GAAI,KAAKC,MAAL,CAAYC,OAAZ,CAAoBC,SAAhC;;MACA,IAAKH,KAAK,CAACI,OAAN,KAAkB,IAAvB,EAA8B;QAC5B,KAAKV,QAAL,GAAgB,IAAhB;MACF,CAFA,MAEO;QACL,KAAKA,QAAL,GAAgB,KAAhB;MACF;IACF;;EAbQ,CATG;;EAwBbW,OAAO,GAAG;IACRC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKN,MAAL,CAAYO,KAAZ,CAAkBC,cAAlB,CAAiCf,QAA5D;IACA,KAAKK,WAAL;EACD,CA3BY;;EA4BbW,QAAO,EAAI;IACTC,WAAW,GAAG;MACZ,OAAO,KAAKV,MAAL,CAAYC,OAAZ,CAAoBC,SAA3B;IACF;;EAHS,CA5BE;EAiCbS,KAAI,EAAI;IACND,WAAW,CAAEE,GAAF,EAAQ;MACjBP,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCM,GAAhC;IACF;;EAHM;EAKR;;;;;;;;;;;;;AAtCa,CAAf","names":["name","components","data","isSignIn","methods","headEvent","key","$emit","checkIsSign","check","$store","getters","GET_TOKEN","refresh","created","console","log","state","loginStateInfo","computed","check_token","watch","val"],"sourceRoot":"","sources":["/Users/kdw/Documents/todo/todo-front/src/components/common/TodoHeader.vue"],"sourcesContent":["<template lang=\"html\">\n  <header>\n    <h1>머하꽈</h1>\n    <!-- 로그인 여부는 vuex의 값을 바라보게 한다. -->\n    <div v-if=\" !isSignIn \" class=\"member\">\n      <span class=\"login\" @click=\"headEvent('login')\">로그인</span> |\n      <span class=\"login\" @click=\"headEvent('signUp')\">회원가입</span>\n    </div>\n    <div v-if=\" isSignIn \" class=\"member\">\n      <span class=\"login\" @click=\"headEvent('logout')\">로그아웃</span>\n    </div>\n  </header>\n</template>\n\n<script>\n// import { inject, toRefs } from \"vue\";\n\nexport default {\n  name: 'TodoHeader',\n  components: {\n  },\n  data() {\n    return {\n      isSignIn : false\n    }\n  },\n  methods : {\n    headEvent(key) {\n      this.$emit('headEvent', key);\n      this.checkIsSign();\n\n    },\n    checkIsSign() {\n      let check = this.$store.getters.GET_TOKEN;\n      if ( check.refresh !== null ) {\n        this.isSignIn = true;\n      } else {\n        this.isSignIn = false;\n      }\n    }\n  },\n  created() {\n    console.log('header this', this.$store.state.loginStateInfo.isSignIn);\n    this.checkIsSign();\n  },\n  computed : {\n    check_token() {\n      return this.$store.getters.GET_TOKEN;\n    }\n  },\n  watch : {\n    check_token( val ) {\n      console.log('watch token val ', val);\n    }\n  }\n  /*\n  setup(props) {\n    const { isSignIn } = toRefs(props);\n    const Vue3GoogleOauth = inject(\"Vue3GoogleOauth\");\n    const handleClickLogin = () => {};\n\n    return {\n      Vue3GoogleOauth,\n      handleClickLogin,\n      isSignIn,\n    };\n\n  },\n  */\n\n}\n</script>\n\n<style lang=\"scss\" scoped>\nh1 {\n  color: #2F3B52;\n  font-weight: 900;\n  margin: 2.5rem 0 1.5rem;\n}\n#login {\n  position: absolute;\n  top: 3px;\n  right: 5px;\n}\n.member {\n  position: absolute;\n  top : 5px;\n  right: 5px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}