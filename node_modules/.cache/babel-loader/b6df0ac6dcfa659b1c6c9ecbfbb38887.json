{"ast":null,"code":"// import { inject, toRefs } from \"vue\";\nexport default {\n  name: 'TodoHeader',\n  components: {},\n\n  data() {\n    return {\n      isSignIn: false\n    };\n  },\n\n  methods: {\n    headEvent(key) {\n      this.$emit('headEvent', key);\n      this.checkIsSign();\n    },\n\n    // 토큰 상태를 체크한다.\n    checkIsSign() {\n      let check = this.$store.getters.GET_TOKEN;\n\n      if (check.refresh !== null) {\n        this.isSignIn = true;\n      } else {\n        console.log('in in in in in 2', Store.state.loginStateInfo.accessToken);\n        this.isSignIn = false;\n      }\n    }\n\n  },\n\n  created() {\n    this.checkIsSign();\n  },\n\n  mounted() {\n    this.emitter.on(\"resSignin\", () => {\n      this.checkIsSign();\n    });\n  }\n  /*\n  setup(props) {\n    const { isSignIn } = toRefs(props);\n    const Vue3GoogleOauth = inject(\"Vue3GoogleOauth\");\n    const handleClickLogin = () => {};\n     return {\n      Vue3GoogleOauth,\n      handleClickLogin,\n      isSignIn,\n    };\n   },\n  */\n\n\n};","map":{"version":3,"mappings":"AAeA;AAEA,eAAe;EACbA,IAAI,EAAE,YADO;EAEbC,UAAU,EAAE,EAFC;;EAIbC,IAAI,GAAG;IACL,OAAO;MACLC,QAAO,EAAI;IADN,CAAP;EAGD,CARY;;EASbC,OAAM,EAAI;IACRC,SAAS,CAACC,GAAD,EAAM;MACb,KAAKC,KAAL,CAAW,WAAX,EAAwBD,GAAxB;MACA,KAAKE,WAAL;IAED,CALO;;IAMR;IACAA,WAAW,GAAG;MACZ,IAAIC,KAAI,GAAI,KAAKC,MAAL,CAAYC,OAAZ,CAAoBC,SAAhC;;MACA,IAAKH,KAAK,CAACI,OAAN,KAAkB,IAAvB,EAA8B;QAC5B,KAAKV,QAAL,GAAgB,IAAhB;MACF,CAFA,MAEO;QACLW,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCC,KAAK,CAACC,KAAN,CAAYC,cAAZ,CAA2BC,WAA3D;QACA,KAAKhB,QAAL,GAAgB,KAAhB;MACF;IACF;;EAfQ,CATG;;EA0BbiB,OAAO,GAAG;IACR,KAAKZ,WAAL;EAED,CA7BY;;EA8Bba,OAAO,GAAG;IACR,KAAKC,OAAL,CAAaC,EAAb,CAAgB,WAAhB,EACE,MAAM;MAAE,KAAKf,WAAL;IAAmB,CAD7B;EAGF;EACA;;;;;;;;;;;;;;AAnCa,CAAf","names":["name","components","data","isSignIn","methods","headEvent","key","$emit","checkIsSign","check","$store","getters","GET_TOKEN","refresh","console","log","Store","state","loginStateInfo","accessToken","created","mounted","emitter","on"],"sourceRoot":"","sources":["/Users/kdw/Documents/todo/todo-front/src/components/common/TodoHeader.vue"],"sourcesContent":["<template lang=\"html\">\n  <header>\n    <h1>머하꽈</h1>\n    <!-- 로그인 여부는 vuex의 값을 바라보게 한다. -->\n    <div v-if=\"!isSignIn\" class=\"member\">\n      <span class=\"login\" @click=\"headEvent('login')\">로그인</span> |\n      <span class=\"login\" @click=\"headEvent('signUp')\">회원가입</span>\n    </div>\n    <div v-if=\"isSignIn\" class=\"member\">\n      <span class=\"login\" @click=\"headEvent('logout')\">로그아웃</span>\n    </div>\n  </header>\n</template>\n\n<script>\n// import { inject, toRefs } from \"vue\";\n\nexport default {\n  name: 'TodoHeader',\n  components: {\n  },\n  data() {\n    return {\n      isSignIn : false\n    }\n  },\n  methods : {\n    headEvent(key) {\n      this.$emit('headEvent', key);\n      this.checkIsSign();\n\n    },\n    // 토큰 상태를 체크한다.\n    checkIsSign() {\n      let check = this.$store.getters.GET_TOKEN;\n      if ( check.refresh !== null ) {\n        this.isSignIn = true;\n      } else {\n        console.log('in in in in in 2', Store.state.loginStateInfo.accessToken)\n        this.isSignIn = false;\n      }\n    }\n  },\n  created() {\n    this.checkIsSign();\n\n  },\n  mounted() {\n    this.emitter.on(\"resSignin\",\n      () => { this.checkIsSign() }\n    );\n  }\n  /*\n  setup(props) {\n    const { isSignIn } = toRefs(props);\n    const Vue3GoogleOauth = inject(\"Vue3GoogleOauth\");\n    const handleClickLogin = () => {};\n\n    return {\n      Vue3GoogleOauth,\n      handleClickLogin,\n      isSignIn,\n    };\n\n  },\n  */\n\n}\n</script>\n\n<style lang=\"scss\" scoped>\nh1 {\n  color: #2F3B52;\n  font-weight: 900;\n  margin: 2.5rem 0 1.5rem;\n}\n#login {\n  position: absolute;\n  top: 3px;\n  right: 5px;\n}\n.member {\n  position: absolute;\n  top : 5px;\n  right: 5px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}