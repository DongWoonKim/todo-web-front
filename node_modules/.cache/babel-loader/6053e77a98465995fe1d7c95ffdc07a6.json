{"ast":null,"code":"import Axios from 'axios';\nimport VueCookies from 'vue-cookies'; // import { store } from '../store/index';\n\n/**\n * 토큰 재발급 후 axios 헤더 값 수정\n*/\n//request 설정\n\nAxios.interceptors.request.use(async function (config) {\n  console.log('axios interceptor 1 ', config);\n  console.log('axios interceptor 2 ', config.url);\n\n  if (config.retry == undefined) {\n    //\n\n    /**\n     * axios 요청 중에 accessToken 만료시 재발급 후 다시 요청할 땐\n     * 기존 요청 정보에서 retry=true만 주가되고\n     * 나머지는 그대로 다시 요청하기 때문에 url이 이상해져서 이렇게 나눔\n     */\n    // config.url = store.state.login.host + config.url; //host 및 url 방식 수정필요\n    console.log('hihihhihi~~~');\n  } //헤더 셋팅\n\n\n  config.timeout = 10000;\n  config.headers['Authorization'] = VueCookies.get('accessToken');\n  config.headers['Refresh'] = VueCookies.get('refreshToken');\n  config.headers['Content-Type'] = 'application/json';\n  console.log('axios interceptors access token ', VueCookies.get('accessToken'));\n  return config;\n}, function (error) {\n  console.log('axios request error : ', error);\n  return Promise.reject(error);\n});","map":{"version":3,"names":["Axios","VueCookies","interceptors","request","use","config","console","log","url","retry","undefined","timeout","headers","get","error","Promise","reject"],"sources":["/Users/kdw/Documents/todo/todo-front/src/service/axios.js"],"sourcesContent":["import Axios from 'axios';\nimport VueCookies from 'vue-cookies';\n// import { store } from '../store/index';\n\n/**\n * 토큰 재발급 후 axios 헤더 값 수정\n*/\n//request 설정\nAxios.interceptors.request.use(async function (config) {\n  console.log('axios interceptor 1 ', config);\n  console.log('axios interceptor 2 ', config.url);\n  if (config.retry==undefined) { //\n    /**\n     * axios 요청 중에 accessToken 만료시 재발급 후 다시 요청할 땐\n     * 기존 요청 정보에서 retry=true만 주가되고\n     * 나머지는 그대로 다시 요청하기 때문에 url이 이상해져서 이렇게 나눔\n     */\n    // config.url = store.state.login.host + config.url; //host 및 url 방식 수정필요\n    console.log('hihihhihi~~~')\n  }\n\n  //헤더 셋팅\n  config.timeout = 10000;\n  config.headers['Authorization'] = VueCookies.get('accessToken');\n  config.headers['Refresh'] = VueCookies.get('refreshToken');\n  config.headers['Content-Type'] = 'application/json';\n  console.log('axios interceptors access token ', VueCookies.get('accessToken'));\n\n\n\n\n  return config;\n}, function (error) {\n  console.log('axios request error : ', error);\n  return Promise.reject(error);\n});\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,aAAvB,C,CACA;;AAEA;AACA;AACA;AACA;;AACAD,KAAK,CAACE,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,gBAAgBC,MAAhB,EAAwB;EACrDC,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,MAApC;EACAC,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,MAAM,CAACG,GAA3C;;EACA,IAAIH,MAAM,CAACI,KAAP,IAAcC,SAAlB,EAA6B;IAAE;;IAC7B;AACJ;AACA;AACA;AACA;IACI;IACAJ,OAAO,CAACC,GAAR,CAAY,cAAZ;EACD,CAXoD,CAarD;;;EACAF,MAAM,CAACM,OAAP,GAAiB,KAAjB;EACAN,MAAM,CAACO,OAAP,CAAe,eAAf,IAAkCX,UAAU,CAACY,GAAX,CAAe,aAAf,CAAlC;EACAR,MAAM,CAACO,OAAP,CAAe,SAAf,IAA4BX,UAAU,CAACY,GAAX,CAAe,cAAf,CAA5B;EACAR,MAAM,CAACO,OAAP,CAAe,cAAf,IAAiC,kBAAjC;EACAN,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDN,UAAU,CAACY,GAAX,CAAe,aAAf,CAAhD;EAKA,OAAOR,MAAP;AACD,CAxBD,EAwBG,UAAUS,KAAV,EAAiB;EAClBR,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCO,KAAtC;EACA,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CA3BD"},"metadata":{},"sourceType":"module"}