{"ast":null,"code":"import Modal from '../../components/common/TodoModal.vue';\nimport Axios from 'axios';\nexport default {\n  name: 'SignUp',\n  components: {\n    'Modal': Modal\n  },\n\n  data() {\n    return {\n      userId: '',\n      isUserIdCheck: '',\n      userPw: '',\n      userPwCheck: '',\n      userName: '',\n      userBirth: '',\n      userEmail: ''\n    };\n  },\n\n  methods: {\n    checkDuplicateId() {\n      console.log('this user id', this.userId);\n      let self = this; // axios get 요청\n\n      Axios.get('http://localhost:8080/member', {\n        params: {\n          userId: this.userId\n        }\n      }).then(function (res) {\n        console.log('res', res);\n\n        if (!res.data) {\n          self.isUserIdCheck = true;\n          alert('사용가능한 ID입니다.');\n        } else {\n          self.isUserIdCheck = false;\n          self.userId = '';\n          alert('중복된 ID가 존재합니다.');\n        }\n      }).catch(function (error) {\n        console.log('res', error);\n      });\n    },\n\n    signUp() {\n      /*\n        ******* 방어코드 시작 *******\n       */\n      if (!this.isUserIdCheck) {\n        alert('ID 중복 체크를 해주세요!');\n        return;\n      }\n\n      if (this.userId === '' || this.userPw === '' || this.userPwCheck === '' || this.userName === '' || this.userBirth === '' || this.userEmail === '') {\n        alert('빠짐없이 입력해주세요!');\n        return;\n      } // password 체크\n\n\n      if (this.userPw > 6) {\n        alert('입력한 글자가 6글자 이상이어야 합니다!');\n\n        if (this.userPw !== this.userPwCheck) {\n          alert('비밀번호가 일치하지 않습니다!');\n          return;\n        }\n\n        return;\n      }\n      /*\n        ******* 방어코드 종료 *******\n       */\n\n\n      let self = this; // axios post 요청\n\n      let obj = {};\n      obj.userId = this.userId;\n      obj.userPw = this.userPw;\n      obj.userName = this.userName;\n      obj.userBirth = this.userBirth;\n      obj.userEmail = this.userEmail;\n      obj.role = 'u'; // 클라이언트 페이지에서 가입시 기본적으로 권한은 일반사용자이다.\n\n      Axios.post('http://localhost:8080/member', JSON.stringify(obj), this.axiosConfig).then(function (response) {\n        alert('가입을 축하드립니다! 로그인해주세요.');\n        self.signFormInit();\n      }).catch(function (error) {\n        console.log('res', error);\n      });\n    },\n\n    keyEvent() {\n      if (this.isUserIdCheck) this.isUserIdCheck = !this.isUserIdCheck;\n    },\n\n    signFormInit() {\n      this.userId = '';\n      this.userPw = '';\n      this.userPwCheck = '';\n      this.userName = '';\n      this.userBirth = '';\n      this.userEmail = '';\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["Modal","Axios","name","components","data","userId","isUserIdCheck","userPw","userPwCheck","userName","userBirth","userEmail","methods","checkDuplicateId","console","log","self","get","params","then","res","alert","catch","error","signUp","obj","role","post","JSON","stringify","axiosConfig","response","signFormInit","keyEvent"],"sourceRoot":"","sources":["/Users/kdw/Documents/todo/todo-front/src/components/login/SignUp.vue"],"sourcesContent":["<template>\n  <Modal>\n    <template #header>\n      <h3>회원가입</h3>\n    </template>\n    <template #body>\n\n      <div class=\"input-group\">\n        <span class=\"input-group-addon\" id=\"basic-addon1\">ID</span>\n        <input type=\"text\" v-model=\"userId\" @keypress=\"keyEvent\" class=\"form-control\" placeholder=\"사용할 ID\">\n        <span class=\"input-group-btn\">\n          <button @click=\"checkDuplicateId\" class=\"btn btn-default\" type=\"button\" style=\"margin:0;\">중복체크</button>\n        </span>\n      </div><!-- /input-group -->\n\n      <div class=\"input-group commonMarginTop\">\n        <span class=\"input-group-addon\" id=\"basic-addon1\">PW</span>\n        <input type=\"password\" v-model=\"userPw\" class=\"form-control\" placeholder=\"비밀번호 입력\">\n      </div><!-- /input-group -->\n\n      <div class=\"input-group commonMarginTop\">\n        <span class=\"input-group-addon\" id=\"basic-addon1\">PW</span>\n        <input type=\"password\" v-model=\"userPwCheck\" class=\"form-control\" placeholder=\"비밀번호 확인\">\n      </div><!-- /input-group -->\n\n      <div class=\"input-group commonMarginTop\">\n        <span class=\"input-group-addon\" id=\"basic-addon1\">이름</span>\n        <input type=\"text\" v-model=\"userName\" class=\"form-control\" placeholder=\"이름을 입력하세요.\">\n      </div><!-- /input-group -->\n\n      <div class=\"input-group commonMarginTop\">\n        <span class=\"input-group-addon\" id=\"basic-addon1\">생년월일</span>\n        <input type=\"text\" v-model=\"userBirth\" class=\"form-control\" placeholder=\"ex) 19001010\">\n      </div><!-- /input-group -->\n\n      <div class=\"input-group commonMarginTop\">\n        <span class=\"input-group-addon\" id=\"basic-addon1\">e-mail</span>\n        <input type=\"text\" v-model=\"userEmail\" class=\"form-control\" placeholder=\"ex) XXXXX@XXXX.com\">\n      </div><!-- /input-group -->\n\n    </template>\n    <template #footer>\n      <div class=\"\">\n        <button type=\"button\" @click=\"signUp\" class=\"btn btn-default\" style=\"margin:0;\">가입</button>\n        <button type=\"button\" class=\"btn btn-default commonMarginLeft\" style=\"margin:0; margin-left: 5px;\">초기화</button>\n      </div>\n    </template>\n  </Modal>\n</template>\n\n<script>\nimport Modal from '../../components/common/TodoModal.vue'\nimport Axios from 'axios'\n\nexport default {\n\n  name: 'SignUp',\n  components: {\n    'Modal' : Modal\n  },\n  data() {\n    return {\n      userId : '',\n      isUserIdCheck : '',\n      userPw : '',\n      userPwCheck : '',\n      userName : '',\n      userBirth : '',\n      userEmail : ''\n    }\n  },\n  methods: {\n    checkDuplicateId() {\n\n      console.log('this user id', this.userId)\n      let self = this;\n\n      // axios get 요청\n      Axios.get( 'http://localhost:8080/member', {\n        params : {\n          userId : this.userId\n        }\n      })\n        .then( function( res ) {\n          console.log( 'res', res );\n          if ( !res.data ) {\n            self.isUserIdCheck = true;\n            alert('사용가능한 ID입니다.');\n          } else {\n            self.isUserIdCheck = false;\n            self.userId = '';\n            alert('중복된 ID가 존재합니다.')\n          }\n        })\n        .catch(function(error) {\n          console.log('res', error);\n        });\n\n    },\n    signUp() {\n      /*\n        ******* 방어코드 시작 *******\n       */\n      if ( !this.isUserIdCheck ) {\n        alert('ID 중복 체크를 해주세요!');\n        return;\n      }\n\n      if (\n        this.userId      === '' ||\n        this.userPw      === '' ||\n        this.userPwCheck === '' ||\n        this.userName    === '' ||\n        this.userBirth   === '' ||\n        this.userEmail   === ''\n      ) {\n        alert('빠짐없이 입력해주세요!');\n        return;\n      }\n\n      // password 체크\n      if ( this.userPw > 6 ) {\n        alert('입력한 글자가 6글자 이상이어야 합니다!')\n        if ( this.userPw !== this.userPwCheck ) {\n          alert('비밀번호가 일치하지 않습니다!')\n          return;\n        }\n        return;\n      }\n      /*\n        ******* 방어코드 종료 *******\n       */\n\n\n      let self = this;\n      // axios post 요청\n      let obj = {};\n      obj.userId = this.userId;\n      obj.userPw = this.userPw;\n      obj.userName = this.userName;\n      obj.userBirth = this.userBirth;\n      obj.userEmail = this.userEmail;\n      obj.role = 'u'; // 클라이언트 페이지에서 가입시 기본적으로 권한은 일반사용자이다.\n\n      Axios.post('http://localhost:8080/member', JSON.stringify( obj ), this.axiosConfig)\n        .then(function(response) {\n\n          alert('가입을 축하드립니다! 로그인해주세요.');\n          self.signFormInit();\n\n        })\n        .catch(function(error) {\n          console.log('res', error);\n        });\n\n    },\n    keyEvent() {\n      if ( this.isUserIdCheck ) this.isUserIdCheck = !this.isUserIdCheck;\n    },\n    signFormInit() {\n\n      this.userId = '';\n      this.userPw = '';\n      this.userPwCheck = '';\n      this.userName = '';\n      this.userBirth = '';\n      this.userEmail = '';\n\n    }\n  }\n\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '~styles/Nomalize.scss';\n@import '~styles/CommonStyle.scss';\n\n</style>\n"]},"metadata":{},"sourceType":"module"}