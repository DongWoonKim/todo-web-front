{"ast":null,"code":"import axios from 'axios';\nimport VueCookies from 'vue-cookies';\nexport const loginStateInfo = {\n  state: () => ({\n    // Vue3GoogleOauthIsAuthorized : false\n    id: '',\n    userId: '',\n    userName: '',\n    userEmail: '',\n    userBirth: '',\n    role: '',\n    isSignIn: false,\n    accessToken: '',\n    refreshToken: ''\n  }),\n  mutations: {\n    SET_USERINFO(state, obj) {\n      state.id = obj.id;\n      state.userId = obj.userId;\n      state.userName = obj.userName;\n      state.userEmail = obj.userEmail;\n      state.userBirth = obj.userBirth;\n      state.role = obj.role; // 토큰발행값 받아야한다...\n\n      state.isSignIn = true;\n    },\n\n    INIT_USERINFO(state) {\n      state.userId = '';\n      state.userName = '';\n      state.isSignIn = false;\n      state.loginToken = '';\n    },\n\n    SIGNIN_TOKEN(state, payload) {\n      VueCookies.set('accessToken', payload.accessToken, '60s');\n      VueCookies.set('refreshToken', payload.refreshToken, '1h');\n      state.accessToken = payload.accessToken;\n      state.refreshToken = payload.refreshToken;\n    },\n\n    REFRESH_TOKEN(state, payload) {\n      VueCookies.set('accessToken', payload.accessToken, '60s');\n      VueCookies.set('refreshToken', payload.refreshToken, '1h');\n      state.accessToken = payload.accessToken;\n    },\n\n    REMOVE_TOKEN() {\n      VueCookies.remove('accessToken');\n      VueCookies.remove('refreshToken');\n    }\n\n  },\n  getters: {\n    // 쿠키에 저장된 토큰 가져오기\n    GET_TOKEN() {\n      let ac = VueCookies.get('accessToken');\n      let rf = VueCookies.get('refreshToken');\n      return {\n        access: ac,\n        refresh: rf\n      };\n    }\n\n  },\n  actions: {\n    SIGNIN: ({\n      commit\n    }, params) => {\n      return new Promise((resolve, reject) => {});\n    }\n  }\n};","map":{"version":3,"names":["axios","VueCookies","loginStateInfo","state","id","userId","userName","userEmail","userBirth","role","isSignIn","accessToken","refreshToken","mutations","SET_USERINFO","obj","INIT_USERINFO","loginToken","SIGNIN_TOKEN","payload","set","REFRESH_TOKEN","REMOVE_TOKEN","remove","getters","GET_TOKEN","ac","get","rf","access","refresh","actions","SIGNIN","commit","params","Promise","resolve","reject"],"sources":["/Users/kdw/Documents/todo/todo-front/src/store/loginStateInfo.js"],"sourcesContent":["import axios from 'axios';\nimport VueCookies from 'vue-cookies'\n\nexport const loginStateInfo = {\n\n  state : () => ({\n    // Vue3GoogleOauthIsAuthorized : false\n    id         : '',\n    userId     : '',\n    userName   : '',\n    userEmail  : '',\n    userBirth  : '',\n    role       : '',\n    isSignIn   : false,\n\n    accessToken : '',\n    refreshToken : ''\n  }),\n\n  mutations : {\n\n    SET_USERINFO ( state, obj ) {\n\n      state.id         = obj.id;\n      state.userId     = obj.userId;\n      state.userName   = obj.userName;\n      state.userEmail  = obj.userEmail;\n      state.userBirth  = obj.userBirth;\n      state.role       = obj.role;\n      // 토큰발행값 받아야한다...\n      state.isSignIn   = true;\n    },\n    INIT_USERINFO ( state ) {\n      state.userId     = '';\n      state.userName   = '';\n      state.isSignIn   = false;\n      state.loginToken = '';\n    },\n\n    SIGNIN_TOKEN ( state, payload ) {\n      VueCookies.set( 'accessToken', payload.accessToken, '60s' );\n      VueCookies.set( 'refreshToken', payload.refreshToken, '1h' );\n      state.accessToken  = payload.accessToken;\n      state.refreshToken = payload.refreshToken;\n    },\n    REFRESH_TOKEN( state, payload ) {\n      VueCookies.set( 'accessToken', payload.accessToken, '60s' );\n      VueCookies.set( 'refreshToken', payload.refreshToken, '1h' );\n      state.accessToken  = payload.accessToken;\n    },\n    REMOVE_TOKEN() {\n      VueCookies.remove( 'accessToken' );\n      VueCookies.remove( 'refreshToken' );\n    }\n\n  },\n\n  getters : {\n    // 쿠키에 저장된 토큰 가져오기\n    GET_TOKEN () {\n      let ac = VueCookies.get( 'accessToken' );\n      let rf = VueCookies.get( 'refreshToken' );\n\n      return {\n        access : ac,\n        refresh : rf\n      };\n    }\n  },\n\n  actions : {\n\n    SIGNIN : ( { commit }, params ) => {\n      return new Promise( ( resolve, reject ) => {\n\n      });\n    }\n\n  }\n\n}\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,OAAO,MAAMC,cAAc,GAAG;EAE5BC,KAAK,EAAG,OAAO;IACb;IACAC,EAAE,EAAW,EAFA;IAGbC,MAAM,EAAO,EAHA;IAIbC,QAAQ,EAAK,EAJA;IAKbC,SAAS,EAAI,EALA;IAMbC,SAAS,EAAI,EANA;IAObC,IAAI,EAAS,EAPA;IAQbC,QAAQ,EAAK,KARA;IAUbC,WAAW,EAAG,EAVD;IAWbC,YAAY,EAAG;EAXF,CAAP,CAFoB;EAgB5BC,SAAS,EAAG;IAEVC,YAAY,CAAGX,KAAH,EAAUY,GAAV,EAAgB;MAE1BZ,KAAK,CAACC,EAAN,GAAmBW,GAAG,CAACX,EAAvB;MACAD,KAAK,CAACE,MAAN,GAAmBU,GAAG,CAACV,MAAvB;MACAF,KAAK,CAACG,QAAN,GAAmBS,GAAG,CAACT,QAAvB;MACAH,KAAK,CAACI,SAAN,GAAmBQ,GAAG,CAACR,SAAvB;MACAJ,KAAK,CAACK,SAAN,GAAmBO,GAAG,CAACP,SAAvB;MACAL,KAAK,CAACM,IAAN,GAAmBM,GAAG,CAACN,IAAvB,CAP0B,CAQ1B;;MACAN,KAAK,CAACO,QAAN,GAAmB,IAAnB;IACD,CAZS;;IAaVM,aAAa,CAAGb,KAAH,EAAW;MACtBA,KAAK,CAACE,MAAN,GAAmB,EAAnB;MACAF,KAAK,CAACG,QAAN,GAAmB,EAAnB;MACAH,KAAK,CAACO,QAAN,GAAmB,KAAnB;MACAP,KAAK,CAACc,UAAN,GAAmB,EAAnB;IACD,CAlBS;;IAoBVC,YAAY,CAAGf,KAAH,EAAUgB,OAAV,EAAoB;MAC9BlB,UAAU,CAACmB,GAAX,CAAgB,aAAhB,EAA+BD,OAAO,CAACR,WAAvC,EAAoD,KAApD;MACAV,UAAU,CAACmB,GAAX,CAAgB,cAAhB,EAAgCD,OAAO,CAACP,YAAxC,EAAsD,IAAtD;MACAT,KAAK,CAACQ,WAAN,GAAqBQ,OAAO,CAACR,WAA7B;MACAR,KAAK,CAACS,YAAN,GAAqBO,OAAO,CAACP,YAA7B;IACD,CAzBS;;IA0BVS,aAAa,CAAElB,KAAF,EAASgB,OAAT,EAAmB;MAC9BlB,UAAU,CAACmB,GAAX,CAAgB,aAAhB,EAA+BD,OAAO,CAACR,WAAvC,EAAoD,KAApD;MACAV,UAAU,CAACmB,GAAX,CAAgB,cAAhB,EAAgCD,OAAO,CAACP,YAAxC,EAAsD,IAAtD;MACAT,KAAK,CAACQ,WAAN,GAAqBQ,OAAO,CAACR,WAA7B;IACD,CA9BS;;IA+BVW,YAAY,GAAG;MACbrB,UAAU,CAACsB,MAAX,CAAmB,aAAnB;MACAtB,UAAU,CAACsB,MAAX,CAAmB,cAAnB;IACD;;EAlCS,CAhBgB;EAsD5BC,OAAO,EAAG;IACR;IACAC,SAAS,GAAI;MACX,IAAIC,EAAE,GAAGzB,UAAU,CAAC0B,GAAX,CAAgB,aAAhB,CAAT;MACA,IAAIC,EAAE,GAAG3B,UAAU,CAAC0B,GAAX,CAAgB,cAAhB,CAAT;MAEA,OAAO;QACLE,MAAM,EAAGH,EADJ;QAELI,OAAO,EAAGF;MAFL,CAAP;IAID;;EAVO,CAtDkB;EAmE5BG,OAAO,EAAG;IAERC,MAAM,EAAG,CAAE;MAAEC;IAAF,CAAF,EAAcC,MAAd,KAA0B;MACjC,OAAO,IAAIC,OAAJ,CAAa,CAAEC,OAAF,EAAWC,MAAX,KAAuB,CAE1C,CAFM,CAAP;IAGD;EANO;AAnEkB,CAAvB"},"metadata":{},"sourceType":"module"}