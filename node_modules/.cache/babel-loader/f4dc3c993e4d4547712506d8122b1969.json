{"ast":null,"code":"import Axios from 'axios';\nimport VueCookies from 'vue-cookies';\nimport { store } from '../store/store';\n/**\n * 토큰 재발급 후 axios 헤더 값 수정\n*/\n//request 설정\n\nAxios.interceptors.request.use(async function (config) {\n  if (config.retry == undefined) {//\n\n    /**\n     * axios 요청 중에 accessToken 만료시 재발급 후 다시 요청할 땐\n     * 기존 요청 정보에서 retry=true만 주가되고\n     * 나머지는 그대로 다시 요청하기 때문에 url이 이상해져서 이렇게 나눔\n     */\n    // config.url = store.state.login.host + config.url; //host 및 url 방식 수정필요\n  } //헤더 셋팅\n\n\n  config.timeout = 10000;\n  config.headers['Authorization'] = VueCookies.get('accessToken');\n  config.headers['Refresh'] = VueCookies.get('refreshToken');\n  config.headers['Content-Type'] = 'application/json';\n  return config;\n}, function (error) {\n  console.log('axios request error : ', error);\n  return Promise.reject(error);\n}); //response 설정\n\nAxios.interceptors.response.use(function (response) {\n  try {\n    return response;\n  } catch (err) {\n    console.error('[axios.interceptors.response] response : ', err.message);\n  }\n}, async function (error) {\n  try {\n    //에러에 대한 response 정보\n    const errorAPI = error.response.config; //요청했던 request 정보가 담겨있음\n    //인증에러 및 재요청이 아닐 경우... (+재요청인데 refreshToken이 있을 경우)\n\n    if (error.response.status == 401 && errorAPI.retry == undefined && VueCookies.get('refreshToken') != null) {\n      errorAPI.retry = true; //재요청이라고 추가 정보를 담음\n\n      await store.dispatch('REFRESH_TOKEN'); //로그인 중간 저장소에 있는 토큰 재발급 action을 실행\n\n      return await axios(errorAPI); //다시 axios 요청\n    }\n  } catch (err) {\n    console.error('[axios.interceptors.response] error : ', err.message);\n  }\n\n  return Promise.reject(error);\n});\nexport default axios;","map":{"version":3,"names":["Axios","VueCookies","store","interceptors","request","use","config","retry","undefined","timeout","headers","get","error","console","log","Promise","reject","response","err","message","errorAPI","status","dispatch","axios"],"sources":["/Users/kdw/Documents/todo/todo-front/src/service/axios.js"],"sourcesContent":["import Axios from 'axios';\nimport VueCookies from 'vue-cookies';\nimport { store } from '../store/store';\n\n/**\n * 토큰 재발급 후 axios 헤더 값 수정\n*/\n//request 설정\nAxios.interceptors.request.use(async function (config) {\n\n  if (config.retry==undefined) { //\n    /**\n     * axios 요청 중에 accessToken 만료시 재발급 후 다시 요청할 땐\n     * 기존 요청 정보에서 retry=true만 주가되고\n     * 나머지는 그대로 다시 요청하기 때문에 url이 이상해져서 이렇게 나눔\n     */\n    // config.url = store.state.login.host + config.url; //host 및 url 방식 수정필요\n  }\n\n  //헤더 셋팅\n  config.timeout = 10000;\n  config.headers['Authorization'] = VueCookies.get('accessToken');\n  config.headers['Refresh'] = VueCookies.get('refreshToken');\n  config.headers['Content-Type'] = 'application/json';\n\n  return config;\n}, function (error) {\n  console.log('axios request error : ', error);\n  return Promise.reject(error);\n});\n//response 설정\nAxios.interceptors.response.use(\n  function (response) {\n    try {\n      return response;\n    } catch (err) {\n      console.error('[axios.interceptors.response] response : ', err.message);\n    }\n  },\n  async function (error) {\n    try {\n      //에러에 대한 response 정보\n      const errorAPI = error.response.config; //요청했던 request 정보가 담겨있음\n      //인증에러 및 재요청이 아닐 경우... (+재요청인데 refreshToken이 있을 경우)\n      if (error.response.status == 401 && errorAPI.retry==undefined && VueCookies.get('refreshToken')!=null)  {\n        errorAPI.retry = true; //재요청이라고 추가 정보를 담음\n        await store.dispatch('REFRESH_TOKEN'); //로그인 중간 저장소에 있는 토큰 재발급 action을 실행\n        return await axios(errorAPI); //다시 axios 요청\n      }\n    } catch (err) {\n      console.error('[axios.interceptors.response] error : ', err.message);\n    }\n    return Promise.reject(error);\n})\n\nexport default axios;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA;AACA;AACA;AACA;;AACAF,KAAK,CAACG,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,gBAAgBC,MAAhB,EAAwB;EAErD,IAAIA,MAAM,CAACC,KAAP,IAAcC,SAAlB,EAA6B,CAAE;;IAC7B;AACJ;AACA;AACA;AACA;IACI;EACD,CAToD,CAWrD;;;EACAF,MAAM,CAACG,OAAP,GAAiB,KAAjB;EACAH,MAAM,CAACI,OAAP,CAAe,eAAf,IAAkCT,UAAU,CAACU,GAAX,CAAe,aAAf,CAAlC;EACAL,MAAM,CAACI,OAAP,CAAe,SAAf,IAA4BT,UAAU,CAACU,GAAX,CAAe,cAAf,CAA5B;EACAL,MAAM,CAACI,OAAP,CAAe,cAAf,IAAiC,kBAAjC;EAEA,OAAOJ,MAAP;AACD,CAlBD,EAkBG,UAAUM,KAAV,EAAiB;EAClBC,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,KAAtC;EACA,OAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CArBD,E,CAsBA;;AACAZ,KAAK,CAACG,YAAN,CAAmBc,QAAnB,CAA4BZ,GAA5B,CACE,UAAUY,QAAV,EAAoB;EAClB,IAAI;IACF,OAAOA,QAAP;EACD,CAFD,CAEE,OAAOC,GAAP,EAAY;IACZL,OAAO,CAACD,KAAR,CAAc,2CAAd,EAA2DM,GAAG,CAACC,OAA/D;EACD;AACF,CAPH,EAQE,gBAAgBP,KAAhB,EAAuB;EACrB,IAAI;IACF;IACA,MAAMQ,QAAQ,GAAGR,KAAK,CAACK,QAAN,CAAeX,MAAhC,CAFE,CAEsC;IACxC;;IACA,IAAIM,KAAK,CAACK,QAAN,CAAeI,MAAf,IAAyB,GAAzB,IAAgCD,QAAQ,CAACb,KAAT,IAAgBC,SAAhD,IAA6DP,UAAU,CAACU,GAAX,CAAe,cAAf,KAAgC,IAAjG,EAAwG;MACtGS,QAAQ,CAACb,KAAT,GAAiB,IAAjB,CADsG,CAC/E;;MACvB,MAAML,KAAK,CAACoB,QAAN,CAAe,eAAf,CAAN,CAFsG,CAE/D;;MACvC,OAAO,MAAMC,KAAK,CAACH,QAAD,CAAlB,CAHsG,CAGxE;IAC/B;EACF,CATD,CASE,OAAOF,GAAP,EAAY;IACZL,OAAO,CAACD,KAAR,CAAc,wCAAd,EAAwDM,GAAG,CAACC,OAA5D;EACD;;EACD,OAAOJ,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH,CAtBD;AAwBA,eAAeW,KAAf"},"metadata":{},"sourceType":"module"}