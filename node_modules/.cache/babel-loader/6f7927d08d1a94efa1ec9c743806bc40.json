{"ast":null,"code":"// import HelloWorld from './components/HelloWorld.vue'\nimport TodoHeader from './components/common/TodoHeader.vue';\nimport TodoFooter from './components/common/TodoFooter.vue';\nimport TodoInput from './components/todo-core/TodoInput.vue';\nimport TodoList from './components/todo-core/TodoList.vue';\nimport Modal from \"./components/common/TodoModal.vue\";\nimport Axios from 'axios';\nimport { inject, toRefs, onMounted } from \"vue\";\nexport default {\n  name: 'App',\n  components: {\n    'TodoHeader': TodoHeader,\n    'TodoFooter': TodoFooter,\n    'TodoInput': TodoInput,\n    'TodoList': TodoList,\n    'Modal': Modal\n  },\n  methods: {\n    addTodo(todoItem) {\n      // 로컬 스토리지에 데이터를 추가하는 로직\n      localStorage.setItem(todoItem, todoItem);\n      this.todoItems.push(todoItem);\n      let obj = {};\n      obj.item = todoItem;\n      Axios.post('http://localhost:8080/todo', JSON.stringify(obj), this.axiosConfig).then(function (response) {\n        console.log('res', response);\n      }).catch(function (error) {\n        console.log('res', error);\n      });\n    },\n\n    headEvent(key) {\n      if (key === 'login') {\n        this.signInModal = true;\n      }\n    },\n\n    clearAll() {\n      localStorage.clear();\n      this.todoItems = [];\n    },\n\n    removeTodo(todoItem, index) {\n      localStorage.removeItem(todoItem);\n      this.todoItems.splice(index, 1);\n    },\n\n    async handleClickSignIn() {\n      try {\n        const googleUser = await this.$gAuth.signIn();\n\n        if (!googleUser) {\n          return null;\n        }\n\n        console.log(\"googleUser\", googleUser);\n        this.user = googleUser.getBasicProfile().getEmail();\n        console.log(\"getId\", this.user);\n        console.log(\"getBasicProfile\", googleUser.getBasicProfile());\n        console.log(\"getAuthResponse\", googleUser.getAuthResponse());\n        console.log(\"getAuthResponse\", this.$gAuth.instance.currentUser.get().getAuthResponse());\n        console.log('Vue3GoogleOauth.isAuthorized', this.Vue3GoogleOauth.isAuthorized);\n      } catch (error) {\n        //on fail do something\n        console.error(error);\n        return null;\n      }\n    },\n\n    async handleClickSignOut() {\n      try {\n        await this.$gAuth.signOut();\n        console.log(\"isAuthorized\", this.Vue3GoogleOauth.isAuthorized);\n        this.user = \"\";\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n  },\n\n  setup(props) {\n    const {\n      isSignIn\n    } = toRefs(props);\n    const Vue3GoogleOauth = inject(\"Vue3GoogleOauth\");\n\n    const handleClickLogin = () => {};\n\n    todoItems = [], signUpModal = false, signInModal = false;\n    return {\n      Vue3GoogleOauth,\n      handleClickLogin,\n      isSignIn,\n      todoItems,\n      signUpModal,\n      signInModal\n    };\n  },\n\n  created() {\n    // console.log('Vue3GoogleOauth.isAuthorized1', this.Vue3GoogleOauth.isAuthorized);\n    if (localStorage.length > 0) {\n      for (let i = 0; i < localStorage.length; ++i) {\n        this.todoItems.push(localStorage.key(i));\n      }\n    }\n  },\n\n  onMounted\n};","map":{"version":3,"mappings":"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","names":["TodoHeader","TodoFooter","TodoInput","TodoList","Modal","Axios","inject","toRefs","onMounted","name","components","methods","addTodo","todoItem","localStorage","setItem","todoItems","push","obj","item","post","JSON","stringify","axiosConfig","then","response","console","log","catch","error","headEvent","key","signInModal","clearAll","clear","removeTodo","index","removeItem","splice","handleClickSignIn","googleUser","$gAuth","signIn","user","getBasicProfile","getEmail","getAuthResponse","instance","currentUser","get","Vue3GoogleOauth","isAuthorized","handleClickSignOut","signOut","setup","props","isSignIn","handleClickLogin","signUpModal","created","length","i"],"sourceRoot":"","sources":["/Users/kdw/Documents/todo/todo-front/src/App.vue"],"sourcesContent":["<!-- https://velog.io/@ddpound/Vue-SpringBoot-HTTP-%ED%86%B5%EC%8B%A0-%ED%85%8C%EC%8A%A4%ED%8A%B8cors%EA%B0%92-%ED%97%88%EC%9A%A9 -->\n<template>\n  <TodoHeader v-on:headEvent=\"headEvent\"/>\n  <TodoInput v-on:addTodo=\"addTodo\"/>\n  <TodoList v-bind:propsdata=\"todoItems\"\n    @removeTodo=\"removeTodo\"/>\n  <TodoFooter v-on:removeAll=\"clearAll\"/>\n\n  <!-- 로그인 모달 -->\n  <Modal v-if=\"signInModal\">\n    <template #header>\n      <div class=\"modalClose\" >\n        <i\n        class=\"closeModalBtn fas fa-times\"\n        aria-hidden=\"true\"\n        @click=\"signInModal = false\"\n        style=\"font-size:2rem;\"\n        ></i>\n      </div>\n      <h1>로그인</h1>\n    </template>\n    <template #body>\n      <button @click=\"handleClickSignIn\"\n        :disabled=\"!Vue3GoogleOauth.isInit\n        || Vue3GoogleOauth.isAuthorized\">\n        sign in\n      </button>\n      <button @click=\"handleClickSignOut\"\n        :disabled=\"!Vue3GoogleOauth.isAuthorized\">\n        sign out\n      </button>\n    </template>\n  </Modal>\n\n</template>\n\n<script>\n// import HelloWorld from './components/HelloWorld.vue'\nimport TodoHeader from './components/common/TodoHeader.vue'\nimport TodoFooter from './components/common/TodoFooter.vue'\nimport TodoInput from './components/todo-core/TodoInput.vue'\nimport TodoList from './components/todo-core/TodoList.vue'\nimport Modal from \"./components/common/TodoModal.vue\"\nimport Axios from 'axios'\nimport { inject, toRefs, onMounted } from \"vue\";\n\n\nexport default {\n  name: 'App',\n  components: {\n    'TodoHeader' : TodoHeader,\n    'TodoFooter' : TodoFooter,\n    'TodoInput' : TodoInput,\n    'TodoList' : TodoList,\n    'Modal' : Modal\n  },\n  methods: {\n    addTodo(todoItem) {\n      // 로컬 스토리지에 데이터를 추가하는 로직\n      localStorage.setItem(todoItem, todoItem);\n      this.todoItems.push(todoItem);\n\n      let obj = {};\n      obj.item = todoItem;\n\n      Axios.post('http://localhost:8080/todo', JSON.stringify( obj ), this.axiosConfig)\n        .then(function(response) {\n          console.log('res', response);\n        })\n        .catch(function(error) {\n          console.log('res', error);\n        });\n    },\n    headEvent(key) {\n      if (key === 'login') {\n        this.signInModal = true;\n      }\n    },\n    clearAll() {\n      localStorage.clear();\n      this.todoItems = [];\n    },\n    removeTodo(todoItem, index) {\n      localStorage.removeItem( todoItem );\n      this.todoItems.splice( index, 1 );\n    },\n    async handleClickSignIn(){\n      try {\n        const googleUser = await this.$gAuth.signIn();\n        if (!googleUser) {\n          return null;\n        }\n        console.log(\"googleUser\", googleUser);\n        this.user = googleUser.getBasicProfile().getEmail();\n        console.log(\"getId\", this.user);\n        console.log(\"getBasicProfile\", googleUser.getBasicProfile());\n        console.log(\"getAuthResponse\", googleUser.getAuthResponse());\n        console.log(\n          \"getAuthResponse\",\n          this.$gAuth.instance.currentUser.get().getAuthResponse()\n        );\n        console.log('Vue3GoogleOauth.isAuthorized', this.Vue3GoogleOauth.isAuthorized);\n\n      } catch (error) {\n        //on fail do something\n        console.error(error);\n        return null;\n      }\n    },\n    async handleClickSignOut() {\n      try {\n        await this.$gAuth.signOut();\n        console.log(\"isAuthorized\", this.Vue3GoogleOauth.isAuthorized);\n        this.user = \"\";\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n\n  },\n  setup(props) {\n    const { isSignIn } = toRefs(props);\n    const Vue3GoogleOauth = inject(\"Vue3GoogleOauth\");\n    const handleClickLogin = () => {};\n    todoItems = [],\n    signUpModal = false,\n    signInModal = false\n\n\n    return {\n      Vue3GoogleOauth,\n      handleClickLogin,\n      isSignIn,\n      todoItems,\n      signUpModal,\n      signInModal\n    };\n\n  },\n  created() {\n    // console.log('Vue3GoogleOauth.isAuthorized1', this.Vue3GoogleOauth.isAuthorized);\n    if ( localStorage.length > 0 ) {\n      for ( let i = 0; i < localStorage.length; ++i ) {\n        this.todoItems.push( localStorage.key(i) );\n      }\n    }\n\n  },\n  onMounted\n}\n</script>\n\n<style lang=\"scss\">\n@import '~styles/Nomalize.scss';\n@import '~styles/CommonStyle.scss';\n\nbody {\n  text-align: center;\n  background-color: #F6F6F8;\n}\ninput {\n  border-style: groove;\n  width: 200px;\n}\nbutton {\n  border-style: groove;\n}\n.shadow {\n  box-shadow: 5px 10px 10px rgba(0, 0, 0, 0.03);\n}\n.test{ display:flex; justify-content: center; align-items: center; height:100vh; }\n</style>\n"]},"metadata":{},"sourceType":"module"}