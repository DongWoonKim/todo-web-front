{"ast":null,"code":"import Axios from 'axios';\nimport VueCookies from 'vue-cookies';\nlet accessToken22 = 'asdfasdfjals;fj;ks';\nlet refreshToken22 = 'bewfjlskfjlksj;dl';\nexport const loginStateInfo = {\n  /*\n    *** STATE ***\n  */\n  state: () => ({\n    // Vue3GoogleOauthIsAuthorized : false\n    id: '',\n    userId: '',\n    userName: '',\n    userEmail: '',\n    userBirth: '',\n    role: '',\n    isSignIn: false,\n    accessToken: '',\n    refreshToken: '',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }),\n\n  /*\n    *** MUTATIONS ***\n  */\n  mutations: {\n    SET_USERINFO(state, obj) {\n      state.id = obj.id;\n      state.userId = obj.userId;\n      state.userName = obj.userName;\n      state.userEmail = obj.userEmail;\n      state.userBirth = obj.userBirth;\n      state.role = obj.role; // 토큰발행값 받아야한다...\n\n      state.isSignIn = true;\n    },\n\n    INIT_USERINFO(state) {\n      state.userId = '';\n      state.userName = '';\n      state.isSignIn = false;\n      state.loginToken = '';\n    },\n\n    SIGNIN_TOKEN(state, payload) {\n      VueCookies.set('accessToken', payload.data.accessToken, '60s');\n      VueCookies.set('refreshToken', payload.data.refreshToken, '1h');\n      state.accessToken = payload.data.accessToken;\n      state.refreshToken = payload.data.refreshToken;\n    },\n\n    REFRESH_TOKEN(state, payload) {\n      VueCookies.set('accessToken', payload.data.accessToken, '60s');\n      VueCookies.set('refreshToken', payload.data.refreshToken, '1h');\n      state.accessToken = payload.accessToken;\n    },\n\n    REMOVE_TOKEN(state) {\n      VueCookies.remove('accessToken');\n      VueCookies.remove('refreshToken');\n      state.accessToken = '';\n      state.refreshToken = '';\n    }\n\n  },\n\n  /*\n    *** GETTERS ***\n  */\n  getters: {\n    // 쿠키에 저장된 토큰 가져오기\n    GET_TOKEN() {\n      let ac = VueCookies.get('accessToken');\n      let rf = VueCookies.get('refreshToken');\n      return {\n        access: ac,\n        refresh: rf\n      };\n    },\n\n    GET_STATE_TOKEN(state) {\n      return {\n        access: state.accessToken,\n        refresh: state.refreshToken\n      };\n    }\n\n  },\n\n  /*\n    *** ACTIONS ***\n  */\n  actions: {\n    SIGNIN: ({\n      commit\n    }, params, headConfig) => {\n      return new Promise((resolve, reject) => {\n        Axios.post('http://localhost:8080/auth/signin', params, headConfig).then(res => {\n          commit('SIGNIN_TOKEN', res);\n          resolve();\n        }).catch(err => {\n          console.log('sign in err', err.message);\n          reject(err);\n        });\n      });\n    },\n    // access토큰 재요청\n    REFRESH_TOKEN: ({\n      commit\n    }, headConfig) => {\n      return new Promise((resolve, reject) => {\n        Axios.post('http://localhost:8080/auth/refreshToken', headConfig).then(res => {\n          console.log('refresh res', res);\n          commit('REFRESH_TOKEN', res);\n          resolve(res);\n        }).catch(err => {\n          console.log('refresh token err', err.config);\n          reject(err);\n        });\n      });\n    },\n    SIGNOUT: ({\n      commit\n    }) => {\n      commit('REMOVE_TOKEN');\n    }\n  }\n};","map":{"version":3,"names":["Axios","VueCookies","accessToken22","refreshToken22","loginStateInfo","state","id","userId","userName","userEmail","userBirth","role","isSignIn","accessToken","refreshToken","headers","mutations","SET_USERINFO","obj","INIT_USERINFO","loginToken","SIGNIN_TOKEN","payload","set","data","REFRESH_TOKEN","REMOVE_TOKEN","remove","getters","GET_TOKEN","ac","get","rf","access","refresh","GET_STATE_TOKEN","actions","SIGNIN","commit","params","headConfig","Promise","resolve","reject","post","then","res","catch","err","console","log","message","config","SIGNOUT"],"sources":["/Users/kdw/Documents/todo/todo-front/src/store/loginStateInfo.js"],"sourcesContent":["import Axios from 'axios'\nimport VueCookies from 'vue-cookies'\n\nlet accessToken22 = 'asdfasdfjals;fj;ks';\nlet refreshToken22 = 'bewfjlskfjlksj;dl';\n\nexport const loginStateInfo = {\n  /*\n    *** STATE ***\n  */\n  state : () => ({\n    // Vue3GoogleOauthIsAuthorized : false\n    id         : '',\n    userId     : '',\n    userName   : '',\n    userEmail  : '',\n    userBirth  : '',\n    role       : '',\n    isSignIn   : false,\n\n    accessToken : '',\n    refreshToken : '',\n\n    headers : { \"Content-Type\" : \"application/json\" }\n  }),\n  /*\n    *** MUTATIONS ***\n  */\n  mutations : {\n\n    SET_USERINFO ( state, obj ) {\n\n      state.id         = obj.id;\n      state.userId     = obj.userId;\n      state.userName   = obj.userName;\n      state.userEmail  = obj.userEmail;\n      state.userBirth  = obj.userBirth;\n      state.role       = obj.role;\n      // 토큰발행값 받아야한다...\n      state.isSignIn   = true;\n    },\n    INIT_USERINFO ( state ) {\n      state.userId     = '';\n      state.userName   = '';\n      state.isSignIn   = false;\n      state.loginToken = '';\n    },\n\n    SIGNIN_TOKEN ( state, payload ) {\n      VueCookies.set( 'accessToken', payload.data.accessToken, '60s' );\n      VueCookies.set( 'refreshToken', payload.data.refreshToken, '1h' );\n\n      state.accessToken  = payload.data.accessToken;\n      state.refreshToken = payload.data.refreshToken;\n    },\n    REFRESH_TOKEN( state, payload ) {\n      VueCookies.set( 'accessToken', payload.data.accessToken, '60s' );\n      VueCookies.set( 'refreshToken', payload.data.refreshToken, '1h' );\n      state.accessToken  = payload.accessToken;\n    },\n    REMOVE_TOKEN( state ) {\n\n      VueCookies.remove( 'accessToken' );\n      VueCookies.remove( 'refreshToken' );\n\n      state.accessToken  = '';\n      state.refreshToken = '';\n\n    }\n\n  },\n  /*\n    *** GETTERS ***\n  */\n  getters : {\n    // 쿠키에 저장된 토큰 가져오기\n    GET_TOKEN () {\n      let ac = VueCookies.get( 'accessToken' );\n      let rf = VueCookies.get( 'refreshToken' );\n\n      return {\n        access : ac,\n        refresh : rf\n      };\n    },\n\n    GET_STATE_TOKEN ( state ) {\n      return {\n        access : state.accessToken,\n        refresh : state.refreshToken\n      }\n    }\n\n  },\n  /*\n    *** ACTIONS ***\n  */\n  actions : {\n\n    SIGNIN : ( { commit }, params, headConfig ) => {\n      return new Promise( ( resolve, reject ) => {\n        Axios.post( 'http://localhost:8080/auth/signin', params, headConfig).then( res => {\n          commit('SIGNIN_TOKEN', res);\n          resolve();\n        })\n        .catch( err => {\n          console.log( 'sign in err', err.message );\n          reject( err );\n        });\n\n      });\n    },\n    // access토큰 재요청\n    REFRESH_TOKEN : ( { commit }, headConfig ) => {\n      return new Promise( ( resolve, reject ) => {\n        Axios.post( 'http://localhost:8080/auth/refreshToken', headConfig ).then( res => {\n          console.log('refresh res', res);\n          commit('REFRESH_TOKEN', res);\n          resolve( res );\n        }).catch( err => {\n          console.log( 'refresh token err', err.config );\n          reject( err );\n        })\n      })\n    },\n\n    SIGNOUT : ( { commit } ) => {\n      commit('REMOVE_TOKEN');\n    }\n\n  }\n\n}\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,IAAIC,aAAa,GAAG,oBAApB;AACA,IAAIC,cAAc,GAAG,mBAArB;AAEA,OAAO,MAAMC,cAAc,GAAG;EAC5B;AACF;AACA;EACEC,KAAK,EAAG,OAAO;IACb;IACAC,EAAE,EAAW,EAFA;IAGbC,MAAM,EAAO,EAHA;IAIbC,QAAQ,EAAK,EAJA;IAKbC,SAAS,EAAI,EALA;IAMbC,SAAS,EAAI,EANA;IAObC,IAAI,EAAS,EAPA;IAQbC,QAAQ,EAAK,KARA;IAUbC,WAAW,EAAG,EAVD;IAWbC,YAAY,EAAG,EAXF;IAabC,OAAO,EAAG;MAAE,gBAAiB;IAAnB;EAbG,CAAP,CAJoB;;EAmB5B;AACF;AACA;EACEC,SAAS,EAAG;IAEVC,YAAY,CAAGZ,KAAH,EAAUa,GAAV,EAAgB;MAE1Bb,KAAK,CAACC,EAAN,GAAmBY,GAAG,CAACZ,EAAvB;MACAD,KAAK,CAACE,MAAN,GAAmBW,GAAG,CAACX,MAAvB;MACAF,KAAK,CAACG,QAAN,GAAmBU,GAAG,CAACV,QAAvB;MACAH,KAAK,CAACI,SAAN,GAAmBS,GAAG,CAACT,SAAvB;MACAJ,KAAK,CAACK,SAAN,GAAmBQ,GAAG,CAACR,SAAvB;MACAL,KAAK,CAACM,IAAN,GAAmBO,GAAG,CAACP,IAAvB,CAP0B,CAQ1B;;MACAN,KAAK,CAACO,QAAN,GAAmB,IAAnB;IACD,CAZS;;IAaVO,aAAa,CAAGd,KAAH,EAAW;MACtBA,KAAK,CAACE,MAAN,GAAmB,EAAnB;MACAF,KAAK,CAACG,QAAN,GAAmB,EAAnB;MACAH,KAAK,CAACO,QAAN,GAAmB,KAAnB;MACAP,KAAK,CAACe,UAAN,GAAmB,EAAnB;IACD,CAlBS;;IAoBVC,YAAY,CAAGhB,KAAH,EAAUiB,OAAV,EAAoB;MAC9BrB,UAAU,CAACsB,GAAX,CAAgB,aAAhB,EAA+BD,OAAO,CAACE,IAAR,CAAaX,WAA5C,EAAyD,KAAzD;MACAZ,UAAU,CAACsB,GAAX,CAAgB,cAAhB,EAAgCD,OAAO,CAACE,IAAR,CAAaV,YAA7C,EAA2D,IAA3D;MAEAT,KAAK,CAACQ,WAAN,GAAqBS,OAAO,CAACE,IAAR,CAAaX,WAAlC;MACAR,KAAK,CAACS,YAAN,GAAqBQ,OAAO,CAACE,IAAR,CAAaV,YAAlC;IACD,CA1BS;;IA2BVW,aAAa,CAAEpB,KAAF,EAASiB,OAAT,EAAmB;MAC9BrB,UAAU,CAACsB,GAAX,CAAgB,aAAhB,EAA+BD,OAAO,CAACE,IAAR,CAAaX,WAA5C,EAAyD,KAAzD;MACAZ,UAAU,CAACsB,GAAX,CAAgB,cAAhB,EAAgCD,OAAO,CAACE,IAAR,CAAaV,YAA7C,EAA2D,IAA3D;MACAT,KAAK,CAACQ,WAAN,GAAqBS,OAAO,CAACT,WAA7B;IACD,CA/BS;;IAgCVa,YAAY,CAAErB,KAAF,EAAU;MAEpBJ,UAAU,CAAC0B,MAAX,CAAmB,aAAnB;MACA1B,UAAU,CAAC0B,MAAX,CAAmB,cAAnB;MAEAtB,KAAK,CAACQ,WAAN,GAAqB,EAArB;MACAR,KAAK,CAACS,YAAN,GAAqB,EAArB;IAED;;EAxCS,CAtBgB;;EAiE5B;AACF;AACA;EACEc,OAAO,EAAG;IACR;IACAC,SAAS,GAAI;MACX,IAAIC,EAAE,GAAG7B,UAAU,CAAC8B,GAAX,CAAgB,aAAhB,CAAT;MACA,IAAIC,EAAE,GAAG/B,UAAU,CAAC8B,GAAX,CAAgB,cAAhB,CAAT;MAEA,OAAO;QACLE,MAAM,EAAGH,EADJ;QAELI,OAAO,EAAGF;MAFL,CAAP;IAID,CAVO;;IAYRG,eAAe,CAAG9B,KAAH,EAAW;MACxB,OAAO;QACL4B,MAAM,EAAG5B,KAAK,CAACQ,WADV;QAELqB,OAAO,EAAG7B,KAAK,CAACS;MAFX,CAAP;IAID;;EAjBO,CApEkB;;EAwF5B;AACF;AACA;EACEsB,OAAO,EAAG;IAERC,MAAM,EAAG,CAAE;MAAEC;IAAF,CAAF,EAAcC,MAAd,EAAsBC,UAAtB,KAAsC;MAC7C,OAAO,IAAIC,OAAJ,CAAa,CAAEC,OAAF,EAAWC,MAAX,KAAuB;QACzC3C,KAAK,CAAC4C,IAAN,CAAY,mCAAZ,EAAiDL,MAAjD,EAAyDC,UAAzD,EAAqEK,IAArE,CAA2EC,GAAG,IAAI;UAChFR,MAAM,CAAC,cAAD,EAAiBQ,GAAjB,CAAN;UACAJ,OAAO;QACR,CAHD,EAICK,KAJD,CAIQC,GAAG,IAAI;UACbC,OAAO,CAACC,GAAR,CAAa,aAAb,EAA4BF,GAAG,CAACG,OAAhC;UACAR,MAAM,CAAEK,GAAF,CAAN;QACD,CAPD;MASD,CAVM,CAAP;IAWD,CAdO;IAeR;IACAvB,aAAa,EAAG,CAAE;MAAEa;IAAF,CAAF,EAAcE,UAAd,KAA8B;MAC5C,OAAO,IAAIC,OAAJ,CAAa,CAAEC,OAAF,EAAWC,MAAX,KAAuB;QACzC3C,KAAK,CAAC4C,IAAN,CAAY,yCAAZ,EAAuDJ,UAAvD,EAAoEK,IAApE,CAA0EC,GAAG,IAAI;UAC/EG,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BJ,GAA3B;UACAR,MAAM,CAAC,eAAD,EAAkBQ,GAAlB,CAAN;UACAJ,OAAO,CAAEI,GAAF,CAAP;QACD,CAJD,EAIGC,KAJH,CAIUC,GAAG,IAAI;UACfC,OAAO,CAACC,GAAR,CAAa,mBAAb,EAAkCF,GAAG,CAACI,MAAtC;UACAT,MAAM,CAAEK,GAAF,CAAN;QACD,CAPD;MAQD,CATM,CAAP;IAUD,CA3BO;IA6BRK,OAAO,EAAG,CAAE;MAAEf;IAAF,CAAF,KAAkB;MAC1BA,MAAM,CAAC,cAAD,CAAN;IACD;EA/BO;AA3FkB,CAAvB"},"metadata":{},"sourceType":"module"}