{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-23a993ce\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"modalClose\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"회원가입\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = {\n  class: \"input-group\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"input-group-addon\"\n}, \"ID\", -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = {\n  class: \"input-group-btn\"\n};\nconst _hoisted_6 = {\n  class: \"input-group commonMarginTop\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"input-group-addon\"\n}, \"PW\", -1\n/* HOISTED */\n));\n\nconst _hoisted_8 = {\n  class: \"input-group commonMarginTop\"\n};\n\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"input-group-addon\"\n}, \"PW\", -1\n/* HOISTED */\n));\n\nconst _hoisted_10 = {\n  class: \"input-group commonMarginTop\"\n};\n\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"input-group-addon\"\n}, \"이름\", -1\n/* HOISTED */\n));\n\nconst _hoisted_12 = {\n  class: \"input-group commonMarginTop\"\n};\n\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"input-group-addon\"\n}, \"생년월일\", -1\n/* HOISTED */\n));\n\nconst _hoisted_14 = {\n  class: \"input-group commonMarginTop\"\n};\n\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"input-group-addon\"\n}, \"e-mail\", -1\n/* HOISTED */\n));\n\nconst _hoisted_16 = {\n  class: \"\"\n};\nexport function render(_ctx, _cache) {\n  const _component_Modal = _resolveComponent(\"Modal\");\n\n  return _openBlock(), _createBlock(_component_Modal, null, {\n    header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"i\", {\n      class: \"closeModalBtn fas fa-times\",\n      \"aria-hidden\": \"true\",\n      onClick: _cache[0] || (_cache[0] = (...args) => _ctx.modalEvent && _ctx.modalEvent(...args)),\n      style: {\n        \"font-size\": \"3rem\"\n      }\n    })]), _hoisted_2]),\n    body: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.userId = $event),\n      onInput: _cache[2] || (_cache[2] = (...args) => _ctx.keyEvent && _ctx.keyEvent(...args)),\n      class: \"form-control\",\n      placeholder: \"사용할 ID\"\n    }, null, 544\n    /* HYDRATE_EVENTS, NEED_PATCH */\n    ), [[_vModelText, _ctx.userId]]), _createElementVNode(\"span\", _hoisted_5, [_createElementVNode(\"button\", {\n      onClick: _cache[3] || (_cache[3] = (...args) => _ctx.checkDuplicateId && _ctx.checkDuplicateId(...args)),\n      class: \"btn btn-default\",\n      type: \"button\",\n      style: {\n        \"margin\": \"0\"\n      }\n    }, \"중복체크\")])]), _createCommentVNode(\" /input-group \"), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n      type: \"password\",\n      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.userPw = $event),\n      class: \"form-control\",\n      placeholder: \"비밀번호 입력(6자 이상)\"\n    }, null, 512\n    /* NEED_PATCH */\n    ), [[_vModelText, _ctx.userPw]])]), _createCommentVNode(\" /input-group \"), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n      type: \"password\",\n      \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.userPwCheck = $event),\n      class: \"form-control\",\n      placeholder: \"비밀번호 확인(6자 이상)\"\n    }, null, 512\n    /* NEED_PATCH */\n    ), [[_vModelText, _ctx.userPwCheck]])]), _createCommentVNode(\" /input-group \"), _createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.userName = $event),\n      class: \"form-control\",\n      placeholder: \"이름을 입력하세요.\"\n    }, null, 512\n    /* NEED_PATCH */\n    ), [[_vModelText, _ctx.userName]])]), _createCommentVNode(\" /input-group \"), _createElementVNode(\"div\", _hoisted_12, [_hoisted_13, _withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.userBirth = $event),\n      class: \"form-control\",\n      placeholder: \"ex) 19001010\"\n    }, null, 512\n    /* NEED_PATCH */\n    ), [[_vModelText, _ctx.userBirth]])]), _createCommentVNode(\" /input-group \"), _createElementVNode(\"div\", _hoisted_14, [_hoisted_15, _withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => _ctx.userEmail = $event),\n      class: \"form-control\",\n      placeholder: \"ex) XXXXX@XXXX.com\"\n    }, null, 512\n    /* NEED_PATCH */\n    ), [[_vModelText, _ctx.userEmail]])]), _createCommentVNode(\" /input-group \")]),\n    footer: _withCtx(() => [_createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"button\", {\n      type: \"button\",\n      onClick: _cache[9] || (_cache[9] = (...args) => _ctx.signUp && _ctx.signUp(...args)),\n      class: \"btn btn-default\",\n      style: {\n        \"margin\": \"0\"\n      }\n    }, \"가입\"), _createElementVNode(\"button\", {\n      type: \"button\",\n      onClick: _cache[10] || (_cache[10] = (...args) => _ctx.signFormInit && _ctx.signFormInit(...args)),\n      class: \"btn btn-default commonMarginLeft\",\n      style: {\n        \"margin\": \"0\",\n        \"margin-left\": \"5px\"\n      }\n    }, \"초기화\")])]),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":";;;;;EAGWA,KAAK,EAAC;;;gEAQXC,oBAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,EAAQ;AAAA;AAAR;;;EAIKD,KAAK,EAAC;;;gEACTC,oBAAyC,MAAzC,EAAyC;EAAnCD,KAAK,EAAC;AAA6B,CAAzC,EAAgC,IAAhC,EAAkC;AAAA;AAAlC;;;EAEMA,KAAK,EAAC;;;EAKTA,KAAK,EAAC;;;gEACTC,oBAAyC,MAAzC,EAAyC;EAAnCD,KAAK,EAAC;AAA6B,CAAzC,EAAgC,IAAhC,EAAkC;AAAA;AAAlC;;;EAIGA,KAAK,EAAC;;;gEACTC,oBAAyC,MAAzC,EAAyC;EAAnCD,KAAK,EAAC;AAA6B,CAAzC,EAAgC,IAAhC,EAAkC;AAAA;AAAlC;;;EAIGA,KAAK,EAAC;;;iEACTC,oBAAyC,MAAzC,EAAyC;EAAnCD,KAAK,EAAC;AAA6B,CAAzC,EAAgC,IAAhC,EAAkC;AAAA;AAAlC;;;EAIGA,KAAK,EAAC;;;iEACTC,oBAA2C,MAA3C,EAA2C;EAArCD,KAAK,EAAC;AAA+B,CAA3C,EAAgC,MAAhC,EAAoC;AAAA;AAApC;;;EAIGA,KAAK,EAAC;;;iEACTC,oBAA6C,MAA7C,EAA6C;EAAvCD,KAAK,EAAC;AAAiC,CAA7C,EAAgC,QAAhC,EAAsC;AAAA;AAAtC;;;EAMGA,KAAK,EAAC;;;;;uBAjDfE,aAsDQC,gBAtDR,EAsDQ,IAtDR,EAsDQ;IArDKC,MAAM,WACf,MAOM,CAPNH,oBAOM,KAPN,cAOM,CANJA,oBAKK,GALL,EAKK;MAJLD,KAAK,EAAC,4BAID;MAHL,eAAY,MAGP;MAFJK,OAAK,yCAAEC,2CAAF,CAED;MADLC,KAAuB,EAAvB;QAAA;MAAA;IACK,CALL,CAMI,CAPN,CAOM,EACNC,UADM,CARS,CAqDX;IA1CKC,IAAI,WAEb,MAMM,CANNR,oBAMM,KANN,cAMM,CALJS,UAKI,kBAJJT,oBAAgG,OAAhG,EAAgG;MAAzFU,IAAI,EAAC,MAAoF;iEAApEL,cAAMM,OAA8D;MAA3DC,OAAK,yCAAEP,uCAAF,CAAsD;MAA1CN,KAAK,EAAC,cAAoC;MAArBc,WAAW,EAAC;IAAS,CAAhG;;IAAA,kBAA4BR,cAIxB,EAHJL,oBAEO,MAFP,cAEO,CADLA,oBAAuG,QAAvG,EAAuG;MAA9FI,OAAK,yCAAEC,uDAAF,CAAyF;MAArEN,KAAK,EAAC,iBAA+D;MAA7CW,IAAI,EAAC,QAAwC;MAA/BJ,KAAiB,EAAjB;QAAA;MAAA;IAA+B,CAAvG,EAA0F,MAA1F,CACK,CAFP,CAGI,CANN,CAMM,yCAENN,oBAGM,KAHN,cAGM,CAFJc,UAEI,kBADJd,oBAA0F,OAA1F,EAA0F;MAAnFU,IAAI,EAAC,UAA8E;iEAA1DL,cAAMM,OAAoD;MAAlDZ,KAAK,EAAC,cAA4C;MAA7Bc,WAAW,EAAC;IAAiB,CAA1F;;IAAA,kBAAgCR,cAC5B,CAHN,CAFM,EAKAU,qCALA,EAONf,oBAGM,KAHN,cAGM,CAFJgB,UAEI,kBADJhB,oBAA+F,OAA/F,EAA+F;MAAxFU,IAAI,EAAC,UAAmF;iEAA/DL,mBAAWM,OAAoD;MAAlDZ,KAAK,EAAC,cAA4C;MAA7Bc,WAAW,EAAC;IAAiB,CAA/F;;IAAA,kBAAgCR,mBAC5B,CAHN,CAPM,EAUAU,qCAVA,EAYNf,oBAGM,KAHN,eAGM,CAFJiB,WAEI,kBADJjB,oBAAoF,OAApF,EAAoF;MAA7EU,IAAI,EAAC,MAAwE;iEAAxDL,gBAAQM,OAAgD;MAA9CZ,KAAK,EAAC,cAAwC;MAAzBc,WAAW,EAAC;IAAa,CAApF;;IAAA,kBAA4BR,gBACxB,CAHN,CAZM,EAeAU,qCAfA,EAiBNf,oBAGM,KAHN,eAGM,CAFJkB,WAEI,kBADJlB,oBAAuF,OAAvF,EAAuF;MAAhFU,IAAI,EAAC,MAA2E;iEAA3DL,iBAASM,OAAkD;MAAhDZ,KAAK,EAAC,cAA0C;MAA3Bc,WAAW,EAAC;IAAe,CAAvF;;IAAA,kBAA4BR,iBACxB,CAHN,CAjBM,EAoBAU,qCApBA,EAsBNf,oBAGM,KAHN,eAGM,CAFJmB,WAEI,kBADJnB,oBAA6F,OAA7F,EAA6F;MAAtFU,IAAI,EAAC,MAAiF;iEAAjEL,iBAASM,OAAwD;MAAtDZ,KAAK,EAAC,cAAgD;MAAjCc,WAAW,EAAC;IAAqB,CAA7F;;IAAA,kBAA4BR,iBACxB,CAHN,CAtBM,EAyBAU,qCAzBA,CARO,CA0CT;IANKK,MAAM,WACf,MAGM,CAHNpB,oBAGM,KAHN,eAGM,CAFJA,oBAA2F,QAA3F,EAA2F;MAAnFU,IAAI,EAAC,QAA8E;MAApEN,OAAK,yCAAEC,mCAAF,CAA+D;MAArDN,KAAK,EAAC,iBAA+C;MAA7BO,KAAiB,EAAjB;QAAA;MAAA;IAA6B,CAA3F,EAAgF,IAAhF,CAEI,EADJN,oBAAqI,QAArI,EAAqI;MAA7HU,IAAI,EAAC,QAAwH;MAA9GN,OAAK,2CAAEC,+CAAF,CAAyG;MAAzFN,KAAK,EAAC,kCAAmF;MAAhDO,KAAmC,EAAnC;QAAA;QAAA;MAAA;IAAgD,CAArI,EAAyH,KAAzH,CACI,CAHN,CAGM,CAJS,CAMX;;;;EAAA,CAtDR","names":["class","_createElementVNode","_createBlock","_component_Modal","header","onClick","_ctx","style","_hoisted_2","body","_hoisted_4","type","$event","onInput","placeholder","_hoisted_7","_createCommentVNode","_hoisted_9","_hoisted_11","_hoisted_13","_hoisted_15","footer"],"sourceRoot":"","sources":["/Users/kdw/Documents/todo/todo-front/src/components/login/SignUp.vue"],"sourcesContent":["<template>\n  <Modal>\n    <template #header>\n      <div class=\"modalClose\" >\n        <i\n        class=\"closeModalBtn fas fa-times\"\n        aria-hidden=\"true\"\n        @click=\"modalEvent\"\n        style=\"font-size:3rem;\"\n        ></i>\n      </div>\n      <h3>회원가입</h3>\n    </template>\n    <template #body>\n\n      <div class=\"input-group\">\n        <span class=\"input-group-addon\">ID</span>\n        <input type=\"text\" v-model=\"userId\" @input=\"keyEvent\" class=\"form-control\" placeholder=\"사용할 ID\">\n        <span class=\"input-group-btn\">\n          <button @click=\"checkDuplicateId\" class=\"btn btn-default\" type=\"button\" style=\"margin:0;\">중복체크</button>\n        </span>\n      </div><!-- /input-group -->\n\n      <div class=\"input-group commonMarginTop\">\n        <span class=\"input-group-addon\">PW</span>\n        <input type=\"password\" v-model=\"userPw\" class=\"form-control\" placeholder=\"비밀번호 입력(6자 이상)\">\n      </div><!-- /input-group -->\n\n      <div class=\"input-group commonMarginTop\">\n        <span class=\"input-group-addon\">PW</span>\n        <input type=\"password\" v-model=\"userPwCheck\" class=\"form-control\" placeholder=\"비밀번호 확인(6자 이상)\">\n      </div><!-- /input-group -->\n\n      <div class=\"input-group commonMarginTop\">\n        <span class=\"input-group-addon\">이름</span>\n        <input type=\"text\" v-model=\"userName\" class=\"form-control\" placeholder=\"이름을 입력하세요.\">\n      </div><!-- /input-group -->\n\n      <div class=\"input-group commonMarginTop\">\n        <span class=\"input-group-addon\">생년월일</span>\n        <input type=\"text\" v-model=\"userBirth\" class=\"form-control\" placeholder=\"ex) 19001010\">\n      </div><!-- /input-group -->\n\n      <div class=\"input-group commonMarginTop\">\n        <span class=\"input-group-addon\">e-mail</span>\n        <input type=\"text\" v-model=\"userEmail\" class=\"form-control\" placeholder=\"ex) XXXXX@XXXX.com\">\n      </div><!-- /input-group -->\n\n    </template>\n    <template #footer>\n      <div class=\"\">\n        <button type=\"button\" @click=\"signUp\" class=\"btn btn-default\" style=\"margin:0;\">가입</button>\n        <button type=\"button\" @click=\"signFormInit\" class=\"btn btn-default commonMarginLeft\" style=\"margin:0; margin-left: 5px;\">초기화</button>\n      </div>\n    </template>\n  </Modal>\n</template>\n\n<script>\nimport Modal from '../../components/common/TodoModal.vue'\nimport Axios from 'axios'\n\nexport default {\n\n  name: 'SignUp',\n  components: {\n    'Modal' : Modal\n  },\n  data() {\n    return {\n      userId : '',\n      isUserIdCheck : '',\n      userPw : '',\n      userPwCheck : '',\n      userName : '',\n      userBirth : '',\n      userEmail : '',\n      mailFlag : false\n    }\n  },\n  methods: {\n    /* ID 중복 체크 */\n    checkDuplicateId() {\n\n      let self = this;\n\n      // axios get 요청\n      Axios.get( 'http://localhost:8080/member', {\n        params : {\n          userId : this.userId\n        }\n      })\n        .then( function( res ) {\n          console.log( 'res', res );\n          if ( !res.data ) {\n            self.isUserIdCheck = true;\n            alert('사용가능한 ID입니다.');\n          } else {\n            self.isUserIdCheck = false;\n            self.userId = '';\n            alert('중복된 ID가 존재합니다.')\n          }\n        })\n        .catch(function(error) {\n          console.log('res', error);\n        });\n\n    },\n    /* email 중복 체크 */\n    async checkDuplicateEmail() {\n      alert('hi')\n      let self = this;\n\n      // axios get 요청\n      Axios.get( 'http://localhost:8080/member/email', {\n        params : {\n          userEmail : this.userEmail\n        }\n      })\n        .then( function( res ) {\n          console.log('res res res', res);\n          await if ( res.data ) {\n            self.mailFlag = true;\n          }\n\n        })\n        .catch(function(error) {\n          console.log('res', error);\n        });\n\n    },\n    /* 회원가입 */\n    signUp() {\n\n      /*\n        ******* 방어코드 시작 *******\n       */\n      // if ( !this.checkInvalidate() ) return;\n\n      this.checkDuplicateEmail()\n      console.log('checkDuplicateEmail', this.mailFlag)\n      /*\n      if ( this.checkDuplicateEmail() ) {\n        alert('이미 가입된 email 입니다.');\n        return;\n      }\n      */\n      /*\n      let self = this;\n      // axios post 요청\n      let obj = {};\n      obj.userId = this.userId;\n      obj.userPw = this.userPw;\n      obj.userName = this.userName;\n      obj.userBirth = this.userBirth;\n      obj.userEmail = this.userEmail;\n      obj.role = 'u'; // 클라이언트 페이지에서 가입시 기본적으로 권한은 일반사용자이다.\n\n      Axios.post('http://localhost:8080/member', JSON.stringify( obj ), this.axiosConfig)\n        .then( function( res ) {\n\n          console.log('res', res);\n          alert('가입을 축하드립니다! 로그인해주세요.');\n          self.signFormInit();\n          self.modalEvent();\n\n        })\n        .catch(function(error) {\n          console.log('res', error);\n        });\n        */\n\n    },\n    /* 키이벤트 */\n    keyEvent( e ) {\n\n      const regExp  = /[^0-9a-z]/g;\n      const regExp2 = /[^a-z]/g;\n      const ele     = e.target;\n\n      // userId 첫 글자 숫자 막기\n      if ( this.userId.trim().length === 1 ) {\n\n        if (regExp2.test(ele.value)) {\n          ele.value = ele.value.replace(regExp2, '');\n          alert('ID는 첫 시작은 영문자만 사용가능합니다. ')\n        }\n      }\n\n      // userId 한글입력 막기\n      if (regExp.test(ele.value)) {\n        ele.value = ele.value.replace(regExp, '');\n        alert('ID는 영문(소문자), 숫자만 사용가능합니다. ')\n      }\n\n      // 중복체크 해제\n      if ( this.isUserIdCheck ) this.isUserIdCheck = !this.isUserIdCheck;\n\n    },\n    /* 폼 초기화 */\n    signFormInit() {\n\n      this.userId      = '';\n      this.userPw      = '';\n      this.userPwCheck = '';\n      this.userName    = '';\n      this.userBirth   = '';\n      this.userEmail   = '';\n\n    },\n    /* 검증 */\n    checkInvalidate() {\n\n      // ID 체크\n      if ( !this.isUserIdCheck ) {\n        alert('ID 중복 체크를 해주세요!');\n        return false;\n      }\n\n      if (\n        this.userId      === '' ||\n        this.userPw      === '' ||\n        this.userPwCheck === '' ||\n        this.userName    === '' ||\n        this.userBirth   === '' ||\n        this.userEmail   === ''\n      ) {\n        alert('빠짐없이 정보를 입력해주세요!');\n        return false;\n      }\n\n      // userId 체크\n      if ( this.userId.length < 5 ) {\n        alert('ID는 5자리 이상이어야 합니다!');\n        return false;\n      }\n\n      // password 체크\n      if ( this.userPw.length < 6 ) {\n        alert('입력한 글자가 6글자 이상이어야 합니다!');\n        return false;\n      }\n      if ( this.userPw !== this.userPwCheck ) {\n        alert('비밀번호가 일치하지 않습니다!');\n        return false;\n      }\n\n      // email 체크\n      // 검증에 사용할 정규식 변수\n      let regExp = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\n      if ( this.userEmail.match( regExp ) == null ) {\n        alert('이메일 형식이 틀립니다!');\n        return false;\n      }\n\n      // 모든 검증을 통과시\n      return true;\n    },\n    modalEvent() {\n      this.$emit('modalEvent', 'modalClose');\n    }\n\n  }\n\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '~styles/Nomalize.scss';\n@import '~styles/CommonStyle.scss';\n\n</style>\n"]},"metadata":{},"sourceType":"module"}